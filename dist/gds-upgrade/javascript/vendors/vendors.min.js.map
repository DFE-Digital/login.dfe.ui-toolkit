{"version":3,"file":"vendors.min.js","names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","module","global","factory","this","getBreakpoint","name","property","value","window","getComputedStyle","document","documentElement","getPropertyValue","undefined","setFocus","$element","options","_options$onBeforeFocu","isFocusable","getAttribute","onBlur","_options$onBlur","removeAttribute","setAttribute","addEventListener","once","onBeforeFocus","focus","isSupported","$scope","body","classList","contains","isObject","option","Array","isArray","isScope","Element","Document","formatErrorMessage","Component","message","moduleName","GOVUKFrontendError","constructor","args","super","SupportError","supportMessage","HTMLScriptElement","prototype","ConfigError","ElementError","messageOrOptions","component","identifier","element","expectedType","InitError","componentOrMessage","$root","_$root","childConstructor","elementType","checkSupport","checkInitialised","HTMLElement","hasAttribute","isInitialised","configOverride","Symbol","for","ConfigurableComponent","param","config","_config","defaults","datasetConfig","dataset","schema","out","entries","Object","properties","entry","namespace","field","toString","normaliseString","type","extractConfigByNamespace","normaliseDataset","mergeConfigs","trimmedValue","trim","output","outputType","includes","isFinite","Number","normaliseOptions","scopeOrOptions","onError","scope","configObjects","formattedConfigObject","configObject","key","keys","override","newObject","current","keyParts","split","index","I18n","translations","_config$locale","locale","lang","lookupKey","translation","count","translationPluralForm","getPluralSuffix","match","replacePlaceholders","translationString","formatter","Intl","NumberFormat","supportedLocalesOf","replace","placeholderWithBraces","placeholderKey","hasOwnProperty","placeholderValue","format","hasIntlPluralRulesSupport","Boolean","PluralRules","preferredForm","select","selectPluralFormUsingFallbackRules","console","warn","Math","abs","floor","ruleset","getPluralRulesForLocale","pluralRules","localeShort","pluralRule","pluralRulesMap","languages","arabic","chinese","french","german","irish","russian","scottish","spanish","welsh","lastTwo","last","Accordion","i18n","controlsClass","showAllClass","showAllTextClass","sectionClass","sectionExpandedClass","sectionButtonClass","sectionHeaderClass","sectionHeadingClass","sectionHeadingDividerClass","sectionHeadingTextClass","sectionHeadingTextFocusClass","sectionShowHideToggleClass","sectionShowHideToggleFocusClass","sectionShowHideTextClass","upChevronIconClass","downChevronIconClass","sectionSummaryClass","sectionSummaryFocusClass","sectionContentClass","$sections","$showAllButton","$showAllIcon","$showAllText","querySelectorAll","initControls","initSectionHeaders","updateShowAllButton","areAllSectionsOpen","createElement","add","appendChild","$accordionControls","insertBefore","firstChild","onShowOrHideAllToggle","event","onBeforeMatch","forEach","$section","$header","querySelector","constructHeaderMarkup","setExpanded","isExpanded","onSectionToggle","setInitialState","$span","$heading","$summary","$button","id","attr","from","attributes","$headingText","$headingTextFocus","childNodes","$child","$showHideToggle","$showHideToggleFocus","$showHideText","$showHideIcon","getButtonPunctuationEl","$summarySpan","$summarySpanFocus","remove","removeChild","$fragment","target","closest","nowExpanded","storeState","expanded","$content","newButtonText","textContent","ariaLabelParts","push","ariaLabelMessage","join","every","toggle","getIdentifier","rememberExpanded","sessionStorage","setItem","_unused","state","getItem","_unused2","$punctuationEl","freeze","hideAllSections","hideSection","hideSectionAriaLabel","showAllSections","showSection","showSectionAriaLabel","Button","debounceFormSubmitTimer","handleKeyDown","debounce","$target","preventDefault","click","preventDoubleClick","setTimeout","DEBOUNCE_TIMEOUT_IN_SECONDS","closestAttributeValue","attributeName","$closestElementWithAttribute","CharacterCount","configOverrides","maxlength","maxwords","_ref","_this$config$maxwords","$textarea","$visibleCountMessage","$screenReaderCountMessage","lastInputTimestamp","lastInputValue","valueChecker","maxLength","HTMLTextAreaElement","HTMLInputElement","errors","validationErrors","conditions","required","errorMessage","validateConfig","Infinity","textareaDescriptionId","$textareaDescription","getElementById","$errorMessage","insertAdjacentElement","className","bindChangeEvents","updateCountMessage","handleKeyUp","handleFocus","handleBlur","updateVisibleCountMessage","Date","now","setInterval","updateIfValueChanged","clearInterval","updateScreenReaderCountMessage","isError","isOverThreshold","getCountMessage","text","_text$match","remainingNumber","countType","formatCountMessage","translationKeySuffix","threshold","currentLength","charactersUnderLimit","one","other","charactersAtLimit","charactersOverLimit","wordsUnderLimit","wordsAtLimit","wordsOverLimit","textareaDescription","anyOf","Checkboxes","$inputs","$input","targetId","syncAllConditionalReveals","handleClick","syncConditionalRevealWithInputState","inputIsChecked","checked","unCheckAllInputsExcept","$inputWithSameName","form","unCheckExclusiveInputs","$exclusiveInput","$clickedInput","ErrorSummary","disableAutoFocus","focusTarget","HTMLAnchorElement","inputId","hash","$legendOrLabel","getAssociatedLegendOrLabel","scrollIntoView","preventScroll","_document$querySelect","$fieldset","$legends","getElementsByTagName","$candidateLegend","legendTop","getBoundingClientRect","top","inputRect","height","innerHeight","ExitThisPage","$skiplinkButton","$updateSpan","$indicatorContainer","$overlay","keypressCounter","lastKeyWasModified","timeoutTime","keypressTimeoutId","timeoutMessageId","buildIndicator","initUpdateSpan","initButtonClickHandler","handleKeypress","bind","govukFrontendExitThisPageKeypress","resetPage","$indicator","updateIndicator","exitPage","location","href","resetKeypressTimer","clearTimeout","setKeypressTimer","shiftKey","activated","timedOut","pressTwoMoreTimes","pressOneMoreTime","FileUpload","$status","$announcements","enteredAnotherElement","$label","findLabel","ariaDescribedBy","innerText","commaSpan","containerSpan","buttonSpan","insertAdjacentText","instructionSpan","onClick","onChange","updateDisabledState","observeDisabledState","onDrop","updateDropzoneVisibility","disabled","hideDraggingState","Node","dataTransfer","isContainingFiles","showDraggingState","files","dispatchEvent","CustomEvent","fileCount","MutationObserver","mutationList","mutation","observe","hasNoTypesInfo","types","isDraggingFiles","some","chooseFilesButton","dropInstruction","noFileChosen","multipleFilesChosen","enteredDropZone","leftDropZone","Header","$menuButton","$menu","menuIsOpen","mql","menuId","setupResponsiveChecks","handleMenuButtonClick","breakpoint","matchMedia","checkMode","addListener","matches","NotificationBanner","PasswordInput","$showHideButton","$screenReaderStatusMessage","HTMLButtonElement","hide","persisted","show","setType","isHidden","prefixButton","prefixStatus","showPassword","hidePassword","showPasswordAriaLabel","hidePasswordAriaLabel","passwordShownAnnouncement","passwordHiddenAnnouncement","Radios","$allInputs","$clickedInputForm","$clickedInputName","hasSameFormOwner","ServiceNavigation","SkipLink","_this$$root$getAttrib","origin","pathname","linkedElementId","$linkedElement","Tabs","$tabs","$tabList","$tabListItems","jsHiddenClass","changingHash","boundTabClick","boundTabKeydown","boundOnHashChange","onTabClick","onTabKeydown","onHashChange","_this$mql","setup","teardown","_this$getTab","$item","$tab","setAttributes","hideTab","$activeTab","getTab","showTab","removeEventListener","unsetAttributes","$tabWithHash","$previousTab","getCurrentTab","unhighlightTab","hidePanel","highlightTab","showPanel","panelId","$panel","getPanel","$currentTab","$nextTab","currentTarget","createHistoryEntry","activatePreviousTab","activateNextTab","parentElement","$nextTabListItem","nextElementSibling","$previousTabListItem","previousElementSibling","createAll","$elements","_options$scope","error","log","map","filter","initAll","scopeOrConfig","accordion","button","characterCount","errorSummary","exitThisPage","fileUpload","notificationBanner","passwordInput","componentConfig","version","define","amd","globalThis","self","GOVUKFrontend"],"sources":["vendors.min.js"],"sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.GOVUKFrontend = global.GOVUKFrontend || {}));\n})(this, (function (exports) { 'use strict';\n\n  const version = '5.11.2';\n\n  function getBreakpoint(name) {\n    const property = `--govuk-breakpoint-${name}`;\n    const value = window.getComputedStyle(document.documentElement).getPropertyValue(property);\n    return {\n      property,\n      value: value || undefined\n    };\n  }\n  function setFocus($element, options = {}) {\n    var _options$onBeforeFocu;\n    const isFocusable = $element.getAttribute('tabindex');\n    if (!isFocusable) {\n      $element.setAttribute('tabindex', '-1');\n    }\n    function onFocus() {\n      $element.addEventListener('blur', onBlur, {\n        once: true\n      });\n    }\n    function onBlur() {\n      var _options$onBlur;\n      (_options$onBlur = options.onBlur) == null || _options$onBlur.call($element);\n      if (!isFocusable) {\n        $element.removeAttribute('tabindex');\n      }\n    }\n    $element.addEventListener('focus', onFocus, {\n      once: true\n    });\n    (_options$onBeforeFocu = options.onBeforeFocus) == null || _options$onBeforeFocu.call($element);\n    $element.focus();\n  }\n  function isInitialised($root, moduleName) {\n    return $root instanceof HTMLElement && $root.hasAttribute(`data-${moduleName}-init`);\n  }\n\n  /**\n   * Checks if GOV.UK Frontend is supported on this page\n   *\n   * Some browsers will load and run our JavaScript but GOV.UK Frontend\n   * won't be supported.\n   *\n   * @param {HTMLElement | null} [$scope] - (internal) `<body>` HTML element checked for browser support\n   * @returns {boolean} Whether GOV.UK Frontend is supported on this page\n   */\n  function isSupported($scope = document.body) {\n    if (!$scope) {\n      return false;\n    }\n    return $scope.classList.contains('govuk-frontend-supported');\n  }\n  function isArray(option) {\n    return Array.isArray(option);\n  }\n  function isObject(option) {\n    return !!option && typeof option === 'object' && !isArray(option);\n  }\n  function isScope($scope) {\n    return !!$scope && ($scope instanceof Element || $scope instanceof Document);\n  }\n  function formatErrorMessage(Component, message) {\n    return `${Component.moduleName}: ${message}`;\n  }\n  /**\n   * @typedef ComponentWithModuleName\n   * @property {string} moduleName - Name of the component\n   */\n\n  class GOVUKFrontendError extends Error {\n    constructor(...args) {\n      super(...args);\n      this.name = 'GOVUKFrontendError';\n    }\n  }\n  class SupportError extends GOVUKFrontendError {\n    /**\n     * Checks if GOV.UK Frontend is supported on this page\n     *\n     * @param {HTMLElement | null} [$scope] - HTML element `<body>` checked for browser support\n     */\n    constructor($scope = document.body) {\n      const supportMessage = 'noModule' in HTMLScriptElement.prototype ? 'GOV.UK Frontend initialised without `<body class=\"govuk-frontend-supported\">` from template `<script>` snippet' : 'GOV.UK Frontend is not supported in this browser';\n      super($scope ? supportMessage : 'GOV.UK Frontend initialised without `<script type=\"module\">`');\n      this.name = 'SupportError';\n    }\n  }\n  class ConfigError extends GOVUKFrontendError {\n    constructor(...args) {\n      super(...args);\n      this.name = 'ConfigError';\n    }\n  }\n  class ElementError extends GOVUKFrontendError {\n    constructor(messageOrOptions) {\n      let message = typeof messageOrOptions === 'string' ? messageOrOptions : '';\n      if (isObject(messageOrOptions)) {\n        const {\n          component,\n          identifier,\n          element,\n          expectedType\n        } = messageOrOptions;\n        message = identifier;\n        message += element ? ` is not of type ${expectedType != null ? expectedType : 'HTMLElement'}` : ' not found';\n        if (component) {\n          message = formatErrorMessage(component, message);\n        }\n      }\n      super(message);\n      this.name = 'ElementError';\n    }\n  }\n  class InitError extends GOVUKFrontendError {\n    constructor(componentOrMessage) {\n      const message = typeof componentOrMessage === 'string' ? componentOrMessage : formatErrorMessage(componentOrMessage, `Root element (\\`$root\\`) already initialised`);\n      super(message);\n      this.name = 'InitError';\n    }\n  }\n  /**\n   * @import { ComponentWithModuleName } from '../common/index.mjs'\n   */\n\n  class Component {\n    /**\n     * Returns the root element of the component\n     *\n     * @protected\n     * @returns {RootElementType} - the root element of component\n     */\n    get $root() {\n      return this._$root;\n    }\n    constructor($root) {\n      this._$root = void 0;\n      const childConstructor = this.constructor;\n      if (typeof childConstructor.moduleName !== 'string') {\n        throw new InitError(`\\`moduleName\\` not defined in component`);\n      }\n      if (!($root instanceof childConstructor.elementType)) {\n        throw new ElementError({\n          element: $root,\n          component: childConstructor,\n          identifier: 'Root element (`$root`)',\n          expectedType: childConstructor.elementType.name\n        });\n      } else {\n        this._$root = $root;\n      }\n      childConstructor.checkSupport();\n      this.checkInitialised();\n      const moduleName = childConstructor.moduleName;\n      this.$root.setAttribute(`data-${moduleName}-init`, '');\n    }\n    checkInitialised() {\n      const constructor = this.constructor;\n      const moduleName = constructor.moduleName;\n      if (moduleName && isInitialised(this.$root, moduleName)) {\n        throw new InitError(constructor);\n      }\n    }\n    static checkSupport() {\n      if (!isSupported()) {\n        throw new SupportError();\n      }\n    }\n  }\n\n  /**\n   * @typedef ChildClass\n   * @property {string} moduleName - The module name that'll be looked for in the DOM when initialising the component\n   */\n\n  /**\n   * @typedef {typeof Component & ChildClass} ChildClassConstructor\n   */\n  Component.elementType = HTMLElement;\n\n  const configOverride = Symbol.for('configOverride');\n  class ConfigurableComponent extends Component {\n    [configOverride](param) {\n      return {};\n    }\n\n    /**\n     * Returns the root element of the component\n     *\n     * @protected\n     * @returns {ConfigurationType} - the root element of component\n     */\n    get config() {\n      return this._config;\n    }\n    constructor($root, config) {\n      super($root);\n      this._config = void 0;\n      const childConstructor = this.constructor;\n      if (!isObject(childConstructor.defaults)) {\n        throw new ConfigError(formatErrorMessage(childConstructor, 'Config passed as parameter into constructor but no defaults defined'));\n      }\n      const datasetConfig = normaliseDataset(childConstructor, this._$root.dataset);\n      this._config = mergeConfigs(childConstructor.defaults, config != null ? config : {}, this[configOverride](datasetConfig), datasetConfig);\n    }\n  }\n  function normaliseString(value, property) {\n    const trimmedValue = value ? value.trim() : '';\n    let output;\n    let outputType = property == null ? void 0 : property.type;\n    if (!outputType) {\n      if (['true', 'false'].includes(trimmedValue)) {\n        outputType = 'boolean';\n      }\n      if (trimmedValue.length > 0 && isFinite(Number(trimmedValue))) {\n        outputType = 'number';\n      }\n    }\n    switch (outputType) {\n      case 'boolean':\n        output = trimmedValue === 'true';\n        break;\n      case 'number':\n        output = Number(trimmedValue);\n        break;\n      default:\n        output = value;\n    }\n    return output;\n  }\n  function normaliseDataset(Component, dataset) {\n    if (!isObject(Component.schema)) {\n      throw new ConfigError(formatErrorMessage(Component, 'Config passed as parameter into constructor but no schema defined'));\n    }\n    const out = {};\n    const entries = Object.entries(Component.schema.properties);\n    for (const entry of entries) {\n      const [namespace, property] = entry;\n      const field = namespace.toString();\n      if (field in dataset) {\n        out[field] = normaliseString(dataset[field], property);\n      }\n      if ((property == null ? void 0 : property.type) === 'object') {\n        out[field] = extractConfigByNamespace(Component.schema, dataset, namespace);\n      }\n    }\n    return out;\n  }\n  function normaliseOptions(scopeOrOptions) {\n    let $scope = document;\n    let onError;\n    if (isObject(scopeOrOptions)) {\n      const options = scopeOrOptions;\n      if (isScope(options.scope) || options.scope === null) {\n        $scope = options.scope;\n      }\n      if (typeof options.onError === 'function') {\n        onError = options.onError;\n      }\n    }\n    if (isScope(scopeOrOptions)) {\n      $scope = scopeOrOptions;\n    } else if (scopeOrOptions === null) {\n      $scope = null;\n    } else if (typeof scopeOrOptions === 'function') {\n      onError = scopeOrOptions;\n    }\n    return {\n      scope: $scope,\n      onError\n    };\n  }\n  function mergeConfigs(...configObjects) {\n    const formattedConfigObject = {};\n    for (const configObject of configObjects) {\n      for (const key of Object.keys(configObject)) {\n        const option = formattedConfigObject[key];\n        const override = configObject[key];\n        if (isObject(option) && isObject(override)) {\n          formattedConfigObject[key] = mergeConfigs(option, override);\n        } else {\n          formattedConfigObject[key] = override;\n        }\n      }\n    }\n    return formattedConfigObject;\n  }\n  function validateConfig(schema, config) {\n    const validationErrors = [];\n    for (const [name, conditions] of Object.entries(schema)) {\n      const errors = [];\n      if (Array.isArray(conditions)) {\n        for (const {\n          required,\n          errorMessage\n        } of conditions) {\n          if (!required.every(key => !!config[key])) {\n            errors.push(errorMessage);\n          }\n        }\n        if (name === 'anyOf' && !(conditions.length - errors.length >= 1)) {\n          validationErrors.push(...errors);\n        }\n      }\n    }\n    return validationErrors;\n  }\n  function extractConfigByNamespace(schema, dataset, namespace) {\n    const property = schema.properties[namespace];\n    if ((property == null ? void 0 : property.type) !== 'object') {\n      return;\n    }\n    const newObject = {\n      [namespace]: {}\n    };\n    for (const [key, value] of Object.entries(dataset)) {\n      let current = newObject;\n      const keyParts = key.split('.');\n      for (const [index, name] of keyParts.entries()) {\n        if (isObject(current)) {\n          if (index < keyParts.length - 1) {\n            if (!isObject(current[name])) {\n              current[name] = {};\n            }\n            current = current[name];\n          } else if (key !== namespace) {\n            current[name] = normaliseString(value);\n          }\n        }\n      }\n    }\n    return newObject[namespace];\n  }\n  /**\n   * Schema for component config\n   *\n   * @template {Partial<Record<keyof ConfigurationType, unknown>>} ConfigurationType\n   * @typedef {object} Schema\n   * @property {Record<keyof ConfigurationType, SchemaProperty | undefined>} properties - Schema properties\n   * @property {SchemaCondition<ConfigurationType>[]} [anyOf] - List of schema conditions\n   */\n  /**\n   * Schema property for component config\n   *\n   * @typedef {object} SchemaProperty\n   * @property {'string' | 'boolean' | 'number' | 'object'} type - Property type\n   */\n  /**\n   * Schema condition for component config\n   *\n   * @template {Partial<Record<keyof ConfigurationType, unknown>>} ConfigurationType\n   * @typedef {object} SchemaCondition\n   * @property {(keyof ConfigurationType)[]} required - List of required config fields\n   * @property {string} errorMessage - Error message when required config fields not provided\n   */\n  /**\n   * @template {Partial<Record<keyof ConfigurationType, unknown>>} [ConfigurationType=ObjectNested]\n   * @typedef ChildClass\n   * @property {string} moduleName - The module name that'll be looked for in the DOM when initialising the component\n   * @property {Schema<ConfigurationType>} [schema] - The schema of the component configuration\n   * @property {ConfigurationType} [defaults] - The default values of the configuration of the component\n   */\n  /**\n   * @template {Partial<Record<keyof ConfigurationType, unknown>>} [ConfigurationType=ObjectNested]\n   * @typedef {typeof Component & ChildClass<ConfigurationType>} ChildClassConstructor<ConfigurationType>\n   */\n  /**\n   * @import { CompatibleClass, Config, CreateAllOptions, OnErrorCallback } from '../init.mjs'\n   */\n\n  class I18n {\n    constructor(translations = {}, config = {}) {\n      var _config$locale;\n      this.translations = void 0;\n      this.locale = void 0;\n      this.translations = translations;\n      this.locale = (_config$locale = config.locale) != null ? _config$locale : document.documentElement.lang || 'en';\n    }\n    t(lookupKey, options) {\n      if (!lookupKey) {\n        throw new Error('i18n: lookup key missing');\n      }\n      let translation = this.translations[lookupKey];\n      if (typeof (options == null ? void 0 : options.count) === 'number' && isObject(translation)) {\n        const translationPluralForm = translation[this.getPluralSuffix(lookupKey, options.count)];\n        if (translationPluralForm) {\n          translation = translationPluralForm;\n        }\n      }\n      if (typeof translation === 'string') {\n        if (translation.match(/%{(.\\S+)}/)) {\n          if (!options) {\n            throw new Error('i18n: cannot replace placeholders in string if no option data provided');\n          }\n          return this.replacePlaceholders(translation, options);\n        }\n        return translation;\n      }\n      return lookupKey;\n    }\n    replacePlaceholders(translationString, options) {\n      const formatter = Intl.NumberFormat.supportedLocalesOf(this.locale).length ? new Intl.NumberFormat(this.locale) : undefined;\n      return translationString.replace(/%{(.\\S+)}/g, function (placeholderWithBraces, placeholderKey) {\n        if (Object.prototype.hasOwnProperty.call(options, placeholderKey)) {\n          const placeholderValue = options[placeholderKey];\n          if (placeholderValue === false || typeof placeholderValue !== 'number' && typeof placeholderValue !== 'string') {\n            return '';\n          }\n          if (typeof placeholderValue === 'number') {\n            return formatter ? formatter.format(placeholderValue) : `${placeholderValue}`;\n          }\n          return placeholderValue;\n        }\n        throw new Error(`i18n: no data found to replace ${placeholderWithBraces} placeholder in string`);\n      });\n    }\n    hasIntlPluralRulesSupport() {\n      return Boolean('PluralRules' in window.Intl && Intl.PluralRules.supportedLocalesOf(this.locale).length);\n    }\n    getPluralSuffix(lookupKey, count) {\n      count = Number(count);\n      if (!isFinite(count)) {\n        return 'other';\n      }\n      const translation = this.translations[lookupKey];\n      const preferredForm = this.hasIntlPluralRulesSupport() ? new Intl.PluralRules(this.locale).select(count) : this.selectPluralFormUsingFallbackRules(count);\n      if (isObject(translation)) {\n        if (preferredForm in translation) {\n          return preferredForm;\n        } else if ('other' in translation) {\n          console.warn(`i18n: Missing plural form \".${preferredForm}\" for \"${this.locale}\" locale. Falling back to \".other\".`);\n          return 'other';\n        }\n      }\n      throw new Error(`i18n: Plural form \".other\" is required for \"${this.locale}\" locale`);\n    }\n    selectPluralFormUsingFallbackRules(count) {\n      count = Math.abs(Math.floor(count));\n      const ruleset = this.getPluralRulesForLocale();\n      if (ruleset) {\n        return I18n.pluralRules[ruleset](count);\n      }\n      return 'other';\n    }\n    getPluralRulesForLocale() {\n      const localeShort = this.locale.split('-')[0];\n      for (const pluralRule in I18n.pluralRulesMap) {\n        const languages = I18n.pluralRulesMap[pluralRule];\n        if (languages.includes(this.locale) || languages.includes(localeShort)) {\n          return pluralRule;\n        }\n      }\n    }\n  }\n  I18n.pluralRulesMap = {\n    arabic: ['ar'],\n    chinese: ['my', 'zh', 'id', 'ja', 'jv', 'ko', 'ms', 'th', 'vi'],\n    french: ['hy', 'bn', 'fr', 'gu', 'hi', 'fa', 'pa', 'zu'],\n    german: ['af', 'sq', 'az', 'eu', 'bg', 'ca', 'da', 'nl', 'en', 'et', 'fi', 'ka', 'de', 'el', 'hu', 'lb', 'no', 'so', 'sw', 'sv', 'ta', 'te', 'tr', 'ur'],\n    irish: ['ga'],\n    russian: ['ru', 'uk'],\n    scottish: ['gd'],\n    spanish: ['pt-PT', 'it', 'es'],\n    welsh: ['cy']\n  };\n  I18n.pluralRules = {\n    arabic(n) {\n      if (n === 0) {\n        return 'zero';\n      }\n      if (n === 1) {\n        return 'one';\n      }\n      if (n === 2) {\n        return 'two';\n      }\n      if (n % 100 >= 3 && n % 100 <= 10) {\n        return 'few';\n      }\n      if (n % 100 >= 11 && n % 100 <= 99) {\n        return 'many';\n      }\n      return 'other';\n    },\n    chinese() {\n      return 'other';\n    },\n    french(n) {\n      return n === 0 || n === 1 ? 'one' : 'other';\n    },\n    german(n) {\n      return n === 1 ? 'one' : 'other';\n    },\n    irish(n) {\n      if (n === 1) {\n        return 'one';\n      }\n      if (n === 2) {\n        return 'two';\n      }\n      if (n >= 3 && n <= 6) {\n        return 'few';\n      }\n      if (n >= 7 && n <= 10) {\n        return 'many';\n      }\n      return 'other';\n    },\n    russian(n) {\n      const lastTwo = n % 100;\n      const last = lastTwo % 10;\n      if (last === 1 && lastTwo !== 11) {\n        return 'one';\n      }\n      if (last >= 2 && last <= 4 && !(lastTwo >= 12 && lastTwo <= 14)) {\n        return 'few';\n      }\n      if (last === 0 || last >= 5 && last <= 9 || lastTwo >= 11 && lastTwo <= 14) {\n        return 'many';\n      }\n      return 'other';\n    },\n    scottish(n) {\n      if (n === 1 || n === 11) {\n        return 'one';\n      }\n      if (n === 2 || n === 12) {\n        return 'two';\n      }\n      if (n >= 3 && n <= 10 || n >= 13 && n <= 19) {\n        return 'few';\n      }\n      return 'other';\n    },\n    spanish(n) {\n      if (n === 1) {\n        return 'one';\n      }\n      if (n % 1000000 === 0 && n !== 0) {\n        return 'many';\n      }\n      return 'other';\n    },\n    welsh(n) {\n      if (n === 0) {\n        return 'zero';\n      }\n      if (n === 1) {\n        return 'one';\n      }\n      if (n === 2) {\n        return 'two';\n      }\n      if (n === 3) {\n        return 'few';\n      }\n      if (n === 6) {\n        return 'many';\n      }\n      return 'other';\n    }\n  };\n\n  /**\n   * Accordion component\n   *\n   * This allows a collection of sections to be collapsed by default, showing only\n   * their headers. Sections can be expanded or collapsed individually by clicking\n   * their headers. A \"Show all sections\" button is also added to the top of the\n   * accordion, which switches to \"Hide all sections\" when all the sections are\n   * expanded.\n   *\n   * The state of each section is saved to the DOM via the `aria-expanded`\n   * attribute, which also provides accessibility.\n   *\n   * @preserve\n   * @augments ConfigurableComponent<AccordionConfig>\n   */\n  class Accordion extends ConfigurableComponent {\n    /**\n     * @param {Element | null} $root - HTML element to use for accordion\n     * @param {AccordionConfig} [config] - Accordion config\n     */\n    constructor($root, config = {}) {\n      super($root, config);\n      this.i18n = void 0;\n      this.controlsClass = 'govuk-accordion__controls';\n      this.showAllClass = 'govuk-accordion__show-all';\n      this.showAllTextClass = 'govuk-accordion__show-all-text';\n      this.sectionClass = 'govuk-accordion__section';\n      this.sectionExpandedClass = 'govuk-accordion__section--expanded';\n      this.sectionButtonClass = 'govuk-accordion__section-button';\n      this.sectionHeaderClass = 'govuk-accordion__section-header';\n      this.sectionHeadingClass = 'govuk-accordion__section-heading';\n      this.sectionHeadingDividerClass = 'govuk-accordion__section-heading-divider';\n      this.sectionHeadingTextClass = 'govuk-accordion__section-heading-text';\n      this.sectionHeadingTextFocusClass = 'govuk-accordion__section-heading-text-focus';\n      this.sectionShowHideToggleClass = 'govuk-accordion__section-toggle';\n      this.sectionShowHideToggleFocusClass = 'govuk-accordion__section-toggle-focus';\n      this.sectionShowHideTextClass = 'govuk-accordion__section-toggle-text';\n      this.upChevronIconClass = 'govuk-accordion-nav__chevron';\n      this.downChevronIconClass = 'govuk-accordion-nav__chevron--down';\n      this.sectionSummaryClass = 'govuk-accordion__section-summary';\n      this.sectionSummaryFocusClass = 'govuk-accordion__section-summary-focus';\n      this.sectionContentClass = 'govuk-accordion__section-content';\n      this.$sections = void 0;\n      this.$showAllButton = null;\n      this.$showAllIcon = null;\n      this.$showAllText = null;\n      this.i18n = new I18n(this.config.i18n);\n      const $sections = this.$root.querySelectorAll(`.${this.sectionClass}`);\n      if (!$sections.length) {\n        throw new ElementError({\n          component: Accordion,\n          identifier: `Sections (\\`<div class=\"${this.sectionClass}\">\\`)`\n        });\n      }\n      this.$sections = $sections;\n      this.initControls();\n      this.initSectionHeaders();\n      this.updateShowAllButton(this.areAllSectionsOpen());\n    }\n    initControls() {\n      this.$showAllButton = document.createElement('button');\n      this.$showAllButton.setAttribute('type', 'button');\n      this.$showAllButton.setAttribute('class', this.showAllClass);\n      this.$showAllButton.setAttribute('aria-expanded', 'false');\n      this.$showAllIcon = document.createElement('span');\n      this.$showAllIcon.classList.add(this.upChevronIconClass);\n      this.$showAllButton.appendChild(this.$showAllIcon);\n      const $accordionControls = document.createElement('div');\n      $accordionControls.setAttribute('class', this.controlsClass);\n      $accordionControls.appendChild(this.$showAllButton);\n      this.$root.insertBefore($accordionControls, this.$root.firstChild);\n      this.$showAllText = document.createElement('span');\n      this.$showAllText.classList.add(this.showAllTextClass);\n      this.$showAllButton.appendChild(this.$showAllText);\n      this.$showAllButton.addEventListener('click', () => this.onShowOrHideAllToggle());\n      if ('onbeforematch' in document) {\n        document.addEventListener('beforematch', event => this.onBeforeMatch(event));\n      }\n    }\n    initSectionHeaders() {\n      this.$sections.forEach(($section, i) => {\n        const $header = $section.querySelector(`.${this.sectionHeaderClass}`);\n        if (!$header) {\n          throw new ElementError({\n            component: Accordion,\n            identifier: `Section headers (\\`<div class=\"${this.sectionHeaderClass}\">\\`)`\n          });\n        }\n        this.constructHeaderMarkup($header, i);\n        this.setExpanded(this.isExpanded($section), $section);\n        $header.addEventListener('click', () => this.onSectionToggle($section));\n        this.setInitialState($section);\n      });\n    }\n    constructHeaderMarkup($header, index) {\n      const $span = $header.querySelector(`.${this.sectionButtonClass}`);\n      const $heading = $header.querySelector(`.${this.sectionHeadingClass}`);\n      const $summary = $header.querySelector(`.${this.sectionSummaryClass}`);\n      if (!$heading) {\n        throw new ElementError({\n          component: Accordion,\n          identifier: `Section heading (\\`.${this.sectionHeadingClass}\\`)`\n        });\n      }\n      if (!$span) {\n        throw new ElementError({\n          component: Accordion,\n          identifier: `Section button placeholder (\\`<span class=\"${this.sectionButtonClass}\">\\`)`\n        });\n      }\n      const $button = document.createElement('button');\n      $button.setAttribute('type', 'button');\n      $button.setAttribute('aria-controls', `${this.$root.id}-content-${index + 1}`);\n      for (const attr of Array.from($span.attributes)) {\n        if (attr.name !== 'id') {\n          $button.setAttribute(attr.name, attr.value);\n        }\n      }\n      const $headingText = document.createElement('span');\n      $headingText.classList.add(this.sectionHeadingTextClass);\n      $headingText.id = $span.id;\n      const $headingTextFocus = document.createElement('span');\n      $headingTextFocus.classList.add(this.sectionHeadingTextFocusClass);\n      $headingText.appendChild($headingTextFocus);\n      Array.from($span.childNodes).forEach($child => $headingTextFocus.appendChild($child));\n      const $showHideToggle = document.createElement('span');\n      $showHideToggle.classList.add(this.sectionShowHideToggleClass);\n      $showHideToggle.setAttribute('data-nosnippet', '');\n      const $showHideToggleFocus = document.createElement('span');\n      $showHideToggleFocus.classList.add(this.sectionShowHideToggleFocusClass);\n      $showHideToggle.appendChild($showHideToggleFocus);\n      const $showHideText = document.createElement('span');\n      const $showHideIcon = document.createElement('span');\n      $showHideIcon.classList.add(this.upChevronIconClass);\n      $showHideToggleFocus.appendChild($showHideIcon);\n      $showHideText.classList.add(this.sectionShowHideTextClass);\n      $showHideToggleFocus.appendChild($showHideText);\n      $button.appendChild($headingText);\n      $button.appendChild(this.getButtonPunctuationEl());\n      if ($summary) {\n        const $summarySpan = document.createElement('span');\n        const $summarySpanFocus = document.createElement('span');\n        $summarySpanFocus.classList.add(this.sectionSummaryFocusClass);\n        $summarySpan.appendChild($summarySpanFocus);\n        for (const attr of Array.from($summary.attributes)) {\n          $summarySpan.setAttribute(attr.name, attr.value);\n        }\n        Array.from($summary.childNodes).forEach($child => $summarySpanFocus.appendChild($child));\n        $summary.remove();\n        $button.appendChild($summarySpan);\n        $button.appendChild(this.getButtonPunctuationEl());\n      }\n      $button.appendChild($showHideToggle);\n      $heading.removeChild($span);\n      $heading.appendChild($button);\n    }\n    onBeforeMatch(event) {\n      const $fragment = event.target;\n      if (!($fragment instanceof Element)) {\n        return;\n      }\n      const $section = $fragment.closest(`.${this.sectionClass}`);\n      if ($section) {\n        this.setExpanded(true, $section);\n      }\n    }\n    onSectionToggle($section) {\n      const nowExpanded = !this.isExpanded($section);\n      this.setExpanded(nowExpanded, $section);\n      this.storeState($section, nowExpanded);\n    }\n    onShowOrHideAllToggle() {\n      const nowExpanded = !this.areAllSectionsOpen();\n      this.$sections.forEach($section => {\n        this.setExpanded(nowExpanded, $section);\n        this.storeState($section, nowExpanded);\n      });\n      this.updateShowAllButton(nowExpanded);\n    }\n    setExpanded(expanded, $section) {\n      const $showHideIcon = $section.querySelector(`.${this.upChevronIconClass}`);\n      const $showHideText = $section.querySelector(`.${this.sectionShowHideTextClass}`);\n      const $button = $section.querySelector(`.${this.sectionButtonClass}`);\n      const $content = $section.querySelector(`.${this.sectionContentClass}`);\n      if (!$content) {\n        throw new ElementError({\n          component: Accordion,\n          identifier: `Section content (\\`<div class=\"${this.sectionContentClass}\">\\`)`\n        });\n      }\n      if (!$showHideIcon || !$showHideText || !$button) {\n        return;\n      }\n      const newButtonText = expanded ? this.i18n.t('hideSection') : this.i18n.t('showSection');\n      $showHideText.textContent = newButtonText;\n      $button.setAttribute('aria-expanded', `${expanded}`);\n      const ariaLabelParts = [];\n      const $headingText = $section.querySelector(`.${this.sectionHeadingTextClass}`);\n      if ($headingText) {\n        ariaLabelParts.push($headingText.textContent.trim());\n      }\n      const $summary = $section.querySelector(`.${this.sectionSummaryClass}`);\n      if ($summary) {\n        ariaLabelParts.push($summary.textContent.trim());\n      }\n      const ariaLabelMessage = expanded ? this.i18n.t('hideSectionAriaLabel') : this.i18n.t('showSectionAriaLabel');\n      ariaLabelParts.push(ariaLabelMessage);\n      $button.setAttribute('aria-label', ariaLabelParts.join(' , '));\n      if (expanded) {\n        $content.removeAttribute('hidden');\n        $section.classList.add(this.sectionExpandedClass);\n        $showHideIcon.classList.remove(this.downChevronIconClass);\n      } else {\n        $content.setAttribute('hidden', 'until-found');\n        $section.classList.remove(this.sectionExpandedClass);\n        $showHideIcon.classList.add(this.downChevronIconClass);\n      }\n      this.updateShowAllButton(this.areAllSectionsOpen());\n    }\n    isExpanded($section) {\n      return $section.classList.contains(this.sectionExpandedClass);\n    }\n    areAllSectionsOpen() {\n      return Array.from(this.$sections).every($section => this.isExpanded($section));\n    }\n    updateShowAllButton(expanded) {\n      if (!this.$showAllButton || !this.$showAllText || !this.$showAllIcon) {\n        return;\n      }\n      this.$showAllButton.setAttribute('aria-expanded', expanded.toString());\n      this.$showAllText.textContent = expanded ? this.i18n.t('hideAllSections') : this.i18n.t('showAllSections');\n      this.$showAllIcon.classList.toggle(this.downChevronIconClass, !expanded);\n    }\n\n    /**\n     * Get the identifier for a section\n     *\n     * We need a unique way of identifying each content in the Accordion.\n     * Since an `#id` should be unique and an `id` is required for `aria-`\n     * attributes `id` can be safely used.\n     *\n     * @param {Element} $section - Section element\n     * @returns {string | undefined | null} Identifier for section\n     */\n    getIdentifier($section) {\n      const $button = $section.querySelector(`.${this.sectionButtonClass}`);\n      return $button == null ? void 0 : $button.getAttribute('aria-controls');\n    }\n    storeState($section, isExpanded) {\n      if (!this.config.rememberExpanded) {\n        return;\n      }\n      const id = this.getIdentifier($section);\n      if (id) {\n        try {\n          window.sessionStorage.setItem(id, isExpanded.toString());\n        } catch (_unused) {}\n      }\n    }\n    setInitialState($section) {\n      if (!this.config.rememberExpanded) {\n        return;\n      }\n      const id = this.getIdentifier($section);\n      if (id) {\n        try {\n          const state = window.sessionStorage.getItem(id);\n          if (state !== null) {\n            this.setExpanded(state === 'true', $section);\n          }\n        } catch (_unused2) {}\n      }\n    }\n    getButtonPunctuationEl() {\n      const $punctuationEl = document.createElement('span');\n      $punctuationEl.classList.add('govuk-visually-hidden', this.sectionHeadingDividerClass);\n      $punctuationEl.textContent = ', ';\n      return $punctuationEl;\n    }\n  }\n\n  /**\n   * Accordion config\n   *\n   * @see {@link Accordion.defaults}\n   * @typedef {object} AccordionConfig\n   * @property {AccordionTranslations} [i18n=Accordion.defaults.i18n] - Accordion translations\n   * @property {boolean} [rememberExpanded] - Whether the expanded and collapsed\n   *   state of each section is remembered and restored when navigating.\n   */\n\n  /**\n   * Accordion translations\n   *\n   * @see {@link Accordion.defaults.i18n}\n   * @typedef {object} AccordionTranslations\n   *\n   * Messages used by the component for the labels of its buttons. This includes\n   * the visible text shown on screen, and text to help assistive technology users\n   * for the buttons toggling each section.\n   * @property {string} [hideAllSections] - The text content for the 'Hide all\n   *   sections' button, used when at least one section is expanded.\n   * @property {string} [hideSection] - The text content for the 'Hide'\n   *   button, used when a section is expanded.\n   * @property {string} [hideSectionAriaLabel] - The text content appended to the\n   *   'Hide' button's accessible name when a section is expanded.\n   * @property {string} [showAllSections] - The text content for the 'Show all\n   *   sections' button, used when all sections are collapsed.\n   * @property {string} [showSection] - The text content for the 'Show'\n   *   button, used when a section is collapsed.\n   * @property {string} [showSectionAriaLabel] - The text content appended to the\n   *   'Show' button's accessible name when a section is expanded.\n   */\n\n  /**\n   * @import { Schema } from '../../common/configuration.mjs'\n   */\n  Accordion.moduleName = 'govuk-accordion';\n  Accordion.defaults = Object.freeze({\n    i18n: {\n      hideAllSections: 'Hide all sections',\n      hideSection: 'Hide',\n      hideSectionAriaLabel: 'Hide this section',\n      showAllSections: 'Show all sections',\n      showSection: 'Show',\n      showSectionAriaLabel: 'Show this section'\n    },\n    rememberExpanded: true\n  });\n  Accordion.schema = Object.freeze({\n    properties: {\n      i18n: {\n        type: 'object'\n      },\n      rememberExpanded: {\n        type: 'boolean'\n      }\n    }\n  });\n\n  const DEBOUNCE_TIMEOUT_IN_SECONDS = 1;\n\n  /**\n   * JavaScript enhancements for the Button component\n   *\n   * @preserve\n   * @augments ConfigurableComponent<ButtonConfig>\n   */\n  class Button extends ConfigurableComponent {\n    /**\n     * @param {Element | null} $root - HTML element to use for button\n     * @param {ButtonConfig} [config] - Button config\n     */\n    constructor($root, config = {}) {\n      super($root, config);\n      this.debounceFormSubmitTimer = null;\n      this.$root.addEventListener('keydown', event => this.handleKeyDown(event));\n      this.$root.addEventListener('click', event => this.debounce(event));\n    }\n    handleKeyDown(event) {\n      const $target = event.target;\n      if (event.key !== ' ') {\n        return;\n      }\n      if ($target instanceof HTMLElement && $target.getAttribute('role') === 'button') {\n        event.preventDefault();\n        $target.click();\n      }\n    }\n    debounce(event) {\n      if (!this.config.preventDoubleClick) {\n        return;\n      }\n      if (this.debounceFormSubmitTimer) {\n        event.preventDefault();\n        return false;\n      }\n      this.debounceFormSubmitTimer = window.setTimeout(() => {\n        this.debounceFormSubmitTimer = null;\n      }, DEBOUNCE_TIMEOUT_IN_SECONDS * 1000);\n    }\n  }\n\n  /**\n   * Button config\n   *\n   * @typedef {object} ButtonConfig\n   * @property {boolean} [preventDoubleClick=false] - Prevent accidental double\n   *   clicks on submit buttons from submitting forms multiple times.\n   */\n\n  /**\n   * @import { Schema } from '../../common/configuration.mjs'\n   */\n  Button.moduleName = 'govuk-button';\n  Button.defaults = Object.freeze({\n    preventDoubleClick: false\n  });\n  Button.schema = Object.freeze({\n    properties: {\n      preventDoubleClick: {\n        type: 'boolean'\n      }\n    }\n  });\n\n  function closestAttributeValue($element, attributeName) {\n    const $closestElementWithAttribute = $element.closest(`[${attributeName}]`);\n    return $closestElementWithAttribute ? $closestElementWithAttribute.getAttribute(attributeName) : null;\n  }\n\n  /**\n   * Character count component\n   *\n   * Tracks the number of characters or words in the `.govuk-js-character-count`\n   * `<textarea>` inside the element. Displays a message with the remaining number\n   * of characters/words available, or the number of characters/words in excess.\n   *\n   * You can configure the message to only appear after a certain percentage\n   * of the available characters/words has been entered.\n   *\n   * @preserve\n   * @augments ConfigurableComponent<CharacterCountConfig>\n   */\n  class CharacterCount extends ConfigurableComponent {\n    [configOverride](datasetConfig) {\n      let configOverrides = {};\n      if ('maxwords' in datasetConfig || 'maxlength' in datasetConfig) {\n        configOverrides = {\n          maxlength: undefined,\n          maxwords: undefined\n        };\n      }\n      return configOverrides;\n    }\n\n    /**\n     * @param {Element | null} $root - HTML element to use for character count\n     * @param {CharacterCountConfig} [config] - Character count config\n     */\n    constructor($root, config = {}) {\n      var _ref, _this$config$maxwords;\n      super($root, config);\n      this.$textarea = void 0;\n      this.$visibleCountMessage = void 0;\n      this.$screenReaderCountMessage = void 0;\n      this.lastInputTimestamp = null;\n      this.lastInputValue = '';\n      this.valueChecker = null;\n      this.i18n = void 0;\n      this.maxLength = void 0;\n      const $textarea = this.$root.querySelector('.govuk-js-character-count');\n      if (!($textarea instanceof HTMLTextAreaElement || $textarea instanceof HTMLInputElement)) {\n        throw new ElementError({\n          component: CharacterCount,\n          element: $textarea,\n          expectedType: 'HTMLTextareaElement or HTMLInputElement',\n          identifier: 'Form field (`.govuk-js-character-count`)'\n        });\n      }\n      const errors = validateConfig(CharacterCount.schema, this.config);\n      if (errors[0]) {\n        throw new ConfigError(formatErrorMessage(CharacterCount, errors[0]));\n      }\n      this.i18n = new I18n(this.config.i18n, {\n        locale: closestAttributeValue(this.$root, 'lang')\n      });\n      this.maxLength = (_ref = (_this$config$maxwords = this.config.maxwords) != null ? _this$config$maxwords : this.config.maxlength) != null ? _ref : Infinity;\n      this.$textarea = $textarea;\n      const textareaDescriptionId = `${this.$textarea.id}-info`;\n      const $textareaDescription = document.getElementById(textareaDescriptionId);\n      if (!$textareaDescription) {\n        throw new ElementError({\n          component: CharacterCount,\n          element: $textareaDescription,\n          identifier: `Count message (\\`id=\"${textareaDescriptionId}\"\\`)`\n        });\n      }\n      this.$errorMessage = this.$root.querySelector('.govuk-error-message');\n      if ($textareaDescription.textContent.match(/^\\s*$/)) {\n        $textareaDescription.textContent = this.i18n.t('textareaDescription', {\n          count: this.maxLength\n        });\n      }\n      this.$textarea.insertAdjacentElement('afterend', $textareaDescription);\n      const $screenReaderCountMessage = document.createElement('div');\n      $screenReaderCountMessage.className = 'govuk-character-count__sr-status govuk-visually-hidden';\n      $screenReaderCountMessage.setAttribute('aria-live', 'polite');\n      this.$screenReaderCountMessage = $screenReaderCountMessage;\n      $textareaDescription.insertAdjacentElement('afterend', $screenReaderCountMessage);\n      const $visibleCountMessage = document.createElement('div');\n      $visibleCountMessage.className = $textareaDescription.className;\n      $visibleCountMessage.classList.add('govuk-character-count__status');\n      $visibleCountMessage.setAttribute('aria-hidden', 'true');\n      this.$visibleCountMessage = $visibleCountMessage;\n      $textareaDescription.insertAdjacentElement('afterend', $visibleCountMessage);\n      $textareaDescription.classList.add('govuk-visually-hidden');\n      this.$textarea.removeAttribute('maxlength');\n      this.bindChangeEvents();\n      window.addEventListener('pageshow', () => this.updateCountMessage());\n      this.updateCountMessage();\n    }\n    bindChangeEvents() {\n      this.$textarea.addEventListener('keyup', () => this.handleKeyUp());\n      this.$textarea.addEventListener('focus', () => this.handleFocus());\n      this.$textarea.addEventListener('blur', () => this.handleBlur());\n    }\n    handleKeyUp() {\n      this.updateVisibleCountMessage();\n      this.lastInputTimestamp = Date.now();\n    }\n    handleFocus() {\n      this.valueChecker = window.setInterval(() => {\n        if (!this.lastInputTimestamp || Date.now() - 500 >= this.lastInputTimestamp) {\n          this.updateIfValueChanged();\n        }\n      }, 1000);\n    }\n    handleBlur() {\n      if (this.valueChecker) {\n        window.clearInterval(this.valueChecker);\n      }\n    }\n    updateIfValueChanged() {\n      if (this.$textarea.value !== this.lastInputValue) {\n        this.lastInputValue = this.$textarea.value;\n        this.updateCountMessage();\n      }\n    }\n    updateCountMessage() {\n      this.updateVisibleCountMessage();\n      this.updateScreenReaderCountMessage();\n    }\n    updateVisibleCountMessage() {\n      const remainingNumber = this.maxLength - this.count(this.$textarea.value);\n      const isError = remainingNumber < 0;\n      this.$visibleCountMessage.classList.toggle('govuk-character-count__message--disabled', !this.isOverThreshold());\n      if (!this.$errorMessage) {\n        this.$textarea.classList.toggle('govuk-textarea--error', isError);\n      }\n      this.$visibleCountMessage.classList.toggle('govuk-error-message', isError);\n      this.$visibleCountMessage.classList.toggle('govuk-hint', !isError);\n      this.$visibleCountMessage.textContent = this.getCountMessage();\n    }\n    updateScreenReaderCountMessage() {\n      if (this.isOverThreshold()) {\n        this.$screenReaderCountMessage.removeAttribute('aria-hidden');\n      } else {\n        this.$screenReaderCountMessage.setAttribute('aria-hidden', 'true');\n      }\n      this.$screenReaderCountMessage.textContent = this.getCountMessage();\n    }\n    count(text) {\n      if (this.config.maxwords) {\n        var _text$match;\n        const tokens = (_text$match = text.match(/\\S+/g)) != null ? _text$match : [];\n        return tokens.length;\n      }\n      return text.length;\n    }\n    getCountMessage() {\n      const remainingNumber = this.maxLength - this.count(this.$textarea.value);\n      const countType = this.config.maxwords ? 'words' : 'characters';\n      return this.formatCountMessage(remainingNumber, countType);\n    }\n    formatCountMessage(remainingNumber, countType) {\n      if (remainingNumber === 0) {\n        return this.i18n.t(`${countType}AtLimit`);\n      }\n      const translationKeySuffix = remainingNumber < 0 ? 'OverLimit' : 'UnderLimit';\n      return this.i18n.t(`${countType}${translationKeySuffix}`, {\n        count: Math.abs(remainingNumber)\n      });\n    }\n    isOverThreshold() {\n      if (!this.config.threshold) {\n        return true;\n      }\n      const currentLength = this.count(this.$textarea.value);\n      const maxLength = this.maxLength;\n      const thresholdValue = maxLength * this.config.threshold / 100;\n      return thresholdValue <= currentLength;\n    }\n  }\n\n  /**\n   * Character count config\n   *\n   * @see {@link CharacterCount.defaults}\n   * @typedef {object} CharacterCountConfig\n   * @property {number} [maxlength] - The maximum number of characters.\n   *   If maxwords is provided, the maxlength option will be ignored.\n   * @property {number} [maxwords] - The maximum number of words. If maxwords is\n   *   provided, the maxlength option will be ignored.\n   * @property {number} [threshold=0] - The percentage value of the limit at\n   *   which point the count message is displayed. If this attribute is set, the\n   *   count message will be hidden by default.\n   * @property {CharacterCountTranslations} [i18n=CharacterCount.defaults.i18n] - Character count translations\n   */\n\n  /**\n   * Character count translations\n   *\n   * @see {@link CharacterCount.defaults.i18n}\n   * @typedef {object} CharacterCountTranslations\n   *\n   * Messages shown to users as they type. It provides feedback on how many words\n   * or characters they have remaining or if they are over the limit. This also\n   * includes a message used as an accessible description for the textarea.\n   * @property {TranslationPluralForms} [charactersUnderLimit] - Message displayed\n   *   when the number of characters is under the configured maximum, `maxlength`.\n   *   This message is displayed visually and through assistive technologies. The\n   *   component will replace the `%{count}` placeholder with the number of\n   *   remaining characters. This is a [pluralised list of\n   *   messages](https://frontend.design-system.service.gov.uk/localise-govuk-frontend).\n   * @property {string} [charactersAtLimit] - Message displayed when the number of\n   *   characters reaches the configured maximum, `maxlength`. This message is\n   *   displayed visually and through assistive technologies.\n   * @property {TranslationPluralForms} [charactersOverLimit] - Message displayed\n   *   when the number of characters is over the configured maximum, `maxlength`.\n   *   This message is displayed visually and through assistive technologies. The\n   *   component will replace the `%{count}` placeholder with the number of\n   *   remaining characters. This is a [pluralised list of\n   *   messages](https://frontend.design-system.service.gov.uk/localise-govuk-frontend).\n   * @property {TranslationPluralForms} [wordsUnderLimit] - Message displayed when\n   *   the number of words is under the configured maximum, `maxlength`. This\n   *   message is displayed visually and through assistive technologies. The\n   *   component will replace the `%{count}` placeholder with the number of\n   *   remaining words. This is a [pluralised list of\n   *   messages](https://frontend.design-system.service.gov.uk/localise-govuk-frontend).\n   * @property {string} [wordsAtLimit] - Message displayed when the number of\n   *   words reaches the configured maximum, `maxlength`. This message is\n   *   displayed visually and through assistive technologies.\n   * @property {TranslationPluralForms} [wordsOverLimit] - Message displayed when\n   *   the number of words is over the configured maximum, `maxlength`. This\n   *   message is displayed visually and through assistive technologies. The\n   *   component will replace the `%{count}` placeholder with the number of\n   *   remaining words. This is a [pluralised list of\n   *   messages](https://frontend.design-system.service.gov.uk/localise-govuk-frontend).\n   * @property {TranslationPluralForms} [textareaDescription] - Message made\n   *   available to assistive technologies, if none is already present in the\n   *   HTML, to describe that the component accepts only a limited amount of\n   *   content. It is visible on the page when JavaScript is unavailable. The\n   *   component will replace the `%{count}` placeholder with the value of the\n   *   `maxlength` or `maxwords` parameter.\n   */\n\n  /**\n   * @import { Schema } from '../../common/configuration.mjs'\n   * @import { TranslationPluralForms } from '../../i18n.mjs'\n   */\n  CharacterCount.moduleName = 'govuk-character-count';\n  CharacterCount.defaults = Object.freeze({\n    threshold: 0,\n    i18n: {\n      charactersUnderLimit: {\n        one: 'You have %{count} character remaining',\n        other: 'You have %{count} characters remaining'\n      },\n      charactersAtLimit: 'You have 0 characters remaining',\n      charactersOverLimit: {\n        one: 'You have %{count} character too many',\n        other: 'You have %{count} characters too many'\n      },\n      wordsUnderLimit: {\n        one: 'You have %{count} word remaining',\n        other: 'You have %{count} words remaining'\n      },\n      wordsAtLimit: 'You have 0 words remaining',\n      wordsOverLimit: {\n        one: 'You have %{count} word too many',\n        other: 'You have %{count} words too many'\n      },\n      textareaDescription: {\n        other: ''\n      }\n    }\n  });\n  CharacterCount.schema = Object.freeze({\n    properties: {\n      i18n: {\n        type: 'object'\n      },\n      maxwords: {\n        type: 'number'\n      },\n      maxlength: {\n        type: 'number'\n      },\n      threshold: {\n        type: 'number'\n      }\n    },\n    anyOf: [{\n      required: ['maxwords'],\n      errorMessage: 'Either \"maxlength\" or \"maxwords\" must be provided'\n    }, {\n      required: ['maxlength'],\n      errorMessage: 'Either \"maxlength\" or \"maxwords\" must be provided'\n    }]\n  });\n\n  /**\n   * Checkboxes component\n   *\n   * @preserve\n   */\n  class Checkboxes extends Component {\n    /**\n     * Checkboxes can be associated with a 'conditionally revealed' content block\n     * – for example, a checkbox for 'Phone' could reveal an additional form field\n     * for the user to enter their phone number.\n     *\n     * These associations are made using a `data-aria-controls` attribute, which\n     * is promoted to an aria-controls attribute during initialisation.\n     *\n     * We also need to restore the state of any conditional reveals on the page\n     * (for example if the user has navigated back), and set up event handlers to\n     * keep the reveal in sync with the checkbox state.\n     *\n     * @param {Element | null} $root - HTML element to use for checkboxes\n     */\n    constructor($root) {\n      super($root);\n      this.$inputs = void 0;\n      const $inputs = this.$root.querySelectorAll('input[type=\"checkbox\"]');\n      if (!$inputs.length) {\n        throw new ElementError({\n          component: Checkboxes,\n          identifier: 'Form inputs (`<input type=\"checkbox\">`)'\n        });\n      }\n      this.$inputs = $inputs;\n      this.$inputs.forEach($input => {\n        const targetId = $input.getAttribute('data-aria-controls');\n        if (!targetId) {\n          return;\n        }\n        if (!document.getElementById(targetId)) {\n          throw new ElementError({\n            component: Checkboxes,\n            identifier: `Conditional reveal (\\`id=\"${targetId}\"\\`)`\n          });\n        }\n        $input.setAttribute('aria-controls', targetId);\n        $input.removeAttribute('data-aria-controls');\n      });\n      window.addEventListener('pageshow', () => this.syncAllConditionalReveals());\n      this.syncAllConditionalReveals();\n      this.$root.addEventListener('click', event => this.handleClick(event));\n    }\n    syncAllConditionalReveals() {\n      this.$inputs.forEach($input => this.syncConditionalRevealWithInputState($input));\n    }\n    syncConditionalRevealWithInputState($input) {\n      const targetId = $input.getAttribute('aria-controls');\n      if (!targetId) {\n        return;\n      }\n      const $target = document.getElementById(targetId);\n      if ($target != null && $target.classList.contains('govuk-checkboxes__conditional')) {\n        const inputIsChecked = $input.checked;\n        $input.setAttribute('aria-expanded', inputIsChecked.toString());\n        $target.classList.toggle('govuk-checkboxes__conditional--hidden', !inputIsChecked);\n      }\n    }\n    unCheckAllInputsExcept($input) {\n      const allInputsWithSameName = document.querySelectorAll(`input[type=\"checkbox\"][name=\"${$input.name}\"]`);\n      allInputsWithSameName.forEach($inputWithSameName => {\n        const hasSameFormOwner = $input.form === $inputWithSameName.form;\n        if (hasSameFormOwner && $inputWithSameName !== $input) {\n          $inputWithSameName.checked = false;\n          this.syncConditionalRevealWithInputState($inputWithSameName);\n        }\n      });\n    }\n    unCheckExclusiveInputs($input) {\n      const allInputsWithSameNameAndExclusiveBehaviour = document.querySelectorAll(`input[data-behaviour=\"exclusive\"][type=\"checkbox\"][name=\"${$input.name}\"]`);\n      allInputsWithSameNameAndExclusiveBehaviour.forEach($exclusiveInput => {\n        const hasSameFormOwner = $input.form === $exclusiveInput.form;\n        if (hasSameFormOwner) {\n          $exclusiveInput.checked = false;\n          this.syncConditionalRevealWithInputState($exclusiveInput);\n        }\n      });\n    }\n    handleClick(event) {\n      const $clickedInput = event.target;\n      if (!($clickedInput instanceof HTMLInputElement) || $clickedInput.type !== 'checkbox') {\n        return;\n      }\n      const hasAriaControls = $clickedInput.getAttribute('aria-controls');\n      if (hasAriaControls) {\n        this.syncConditionalRevealWithInputState($clickedInput);\n      }\n      if (!$clickedInput.checked) {\n        return;\n      }\n      const hasBehaviourExclusive = $clickedInput.getAttribute('data-behaviour') === 'exclusive';\n      if (hasBehaviourExclusive) {\n        this.unCheckAllInputsExcept($clickedInput);\n      } else {\n        this.unCheckExclusiveInputs($clickedInput);\n      }\n    }\n  }\n  Checkboxes.moduleName = 'govuk-checkboxes';\n\n  /**\n   * Error summary component\n   *\n   * Takes focus on initialisation for accessible announcement, unless disabled in\n   * configuration.\n   *\n   * @preserve\n   * @augments ConfigurableComponent<ErrorSummaryConfig>\n   */\n  class ErrorSummary extends ConfigurableComponent {\n    /**\n     * @param {Element | null} $root - HTML element to use for error summary\n     * @param {ErrorSummaryConfig} [config] - Error summary config\n     */\n    constructor($root, config = {}) {\n      super($root, config);\n      if (!this.config.disableAutoFocus) {\n        setFocus(this.$root);\n      }\n      this.$root.addEventListener('click', event => this.handleClick(event));\n    }\n    handleClick(event) {\n      const $target = event.target;\n      if ($target && this.focusTarget($target)) {\n        event.preventDefault();\n      }\n    }\n    focusTarget($target) {\n      if (!($target instanceof HTMLAnchorElement)) {\n        return false;\n      }\n      const inputId = $target.hash.replace('#', '');\n      if (!inputId) {\n        return false;\n      }\n      const $input = document.getElementById(inputId);\n      if (!$input) {\n        return false;\n      }\n      const $legendOrLabel = this.getAssociatedLegendOrLabel($input);\n      if (!$legendOrLabel) {\n        return false;\n      }\n      $legendOrLabel.scrollIntoView();\n      $input.focus({\n        preventScroll: true\n      });\n      return true;\n    }\n    getAssociatedLegendOrLabel($input) {\n      var _document$querySelect;\n      const $fieldset = $input.closest('fieldset');\n      if ($fieldset) {\n        const $legends = $fieldset.getElementsByTagName('legend');\n        if ($legends.length) {\n          const $candidateLegend = $legends[0];\n          if ($input instanceof HTMLInputElement && ($input.type === 'checkbox' || $input.type === 'radio')) {\n            return $candidateLegend;\n          }\n          const legendTop = $candidateLegend.getBoundingClientRect().top;\n          const inputRect = $input.getBoundingClientRect();\n          if (inputRect.height && window.innerHeight) {\n            const inputBottom = inputRect.top + inputRect.height;\n            if (inputBottom - legendTop < window.innerHeight / 2) {\n              return $candidateLegend;\n            }\n          }\n        }\n      }\n      return (_document$querySelect = document.querySelector(`label[for='${$input.getAttribute('id')}']`)) != null ? _document$querySelect : $input.closest('label');\n    }\n  }\n\n  /**\n   * Error summary config\n   *\n   * @typedef {object} ErrorSummaryConfig\n   * @property {boolean} [disableAutoFocus=false] - If set to `true` the error\n   *   summary will not be focussed when the page loads.\n   */\n\n  /**\n   * @import { Schema } from '../../common/configuration.mjs'\n   */\n  ErrorSummary.moduleName = 'govuk-error-summary';\n  ErrorSummary.defaults = Object.freeze({\n    disableAutoFocus: false\n  });\n  ErrorSummary.schema = Object.freeze({\n    properties: {\n      disableAutoFocus: {\n        type: 'boolean'\n      }\n    }\n  });\n\n  /**\n   * Exit this page component\n   *\n   * @preserve\n   * @augments ConfigurableComponent<ExitThisPageConfig>\n   */\n  class ExitThisPage extends ConfigurableComponent {\n    /**\n     * @param {Element | null} $root - HTML element that wraps the Exit This Page button\n     * @param {ExitThisPageConfig} [config] - Exit This Page config\n     */\n    constructor($root, config = {}) {\n      super($root, config);\n      this.i18n = void 0;\n      this.$button = void 0;\n      this.$skiplinkButton = null;\n      this.$updateSpan = null;\n      this.$indicatorContainer = null;\n      this.$overlay = null;\n      this.keypressCounter = 0;\n      this.lastKeyWasModified = false;\n      this.timeoutTime = 5000;\n      this.keypressTimeoutId = null;\n      this.timeoutMessageId = null;\n      const $button = this.$root.querySelector('.govuk-exit-this-page__button');\n      if (!($button instanceof HTMLAnchorElement)) {\n        throw new ElementError({\n          component: ExitThisPage,\n          element: $button,\n          expectedType: 'HTMLAnchorElement',\n          identifier: 'Button (`.govuk-exit-this-page__button`)'\n        });\n      }\n      this.i18n = new I18n(this.config.i18n);\n      this.$button = $button;\n      const $skiplinkButton = document.querySelector('.govuk-js-exit-this-page-skiplink');\n      if ($skiplinkButton instanceof HTMLAnchorElement) {\n        this.$skiplinkButton = $skiplinkButton;\n      }\n      this.buildIndicator();\n      this.initUpdateSpan();\n      this.initButtonClickHandler();\n      if (!('govukFrontendExitThisPageKeypress' in document.body.dataset)) {\n        document.addEventListener('keyup', this.handleKeypress.bind(this), true);\n        document.body.dataset.govukFrontendExitThisPageKeypress = 'true';\n      }\n      window.addEventListener('pageshow', this.resetPage.bind(this));\n    }\n    initUpdateSpan() {\n      this.$updateSpan = document.createElement('span');\n      this.$updateSpan.setAttribute('role', 'status');\n      this.$updateSpan.className = 'govuk-visually-hidden';\n      this.$root.appendChild(this.$updateSpan);\n    }\n    initButtonClickHandler() {\n      this.$button.addEventListener('click', this.handleClick.bind(this));\n      if (this.$skiplinkButton) {\n        this.$skiplinkButton.addEventListener('click', this.handleClick.bind(this));\n      }\n    }\n    buildIndicator() {\n      this.$indicatorContainer = document.createElement('div');\n      this.$indicatorContainer.className = 'govuk-exit-this-page__indicator';\n      this.$indicatorContainer.setAttribute('aria-hidden', 'true');\n      for (let i = 0; i < 3; i++) {\n        const $indicator = document.createElement('div');\n        $indicator.className = 'govuk-exit-this-page__indicator-light';\n        this.$indicatorContainer.appendChild($indicator);\n      }\n      this.$button.appendChild(this.$indicatorContainer);\n    }\n    updateIndicator() {\n      if (!this.$indicatorContainer) {\n        return;\n      }\n      this.$indicatorContainer.classList.toggle('govuk-exit-this-page__indicator--visible', this.keypressCounter > 0);\n      const $indicators = this.$indicatorContainer.querySelectorAll('.govuk-exit-this-page__indicator-light');\n      $indicators.forEach(($indicator, index) => {\n        $indicator.classList.toggle('govuk-exit-this-page__indicator-light--on', index < this.keypressCounter);\n      });\n    }\n    exitPage() {\n      if (!this.$updateSpan) {\n        return;\n      }\n      this.$updateSpan.textContent = '';\n      document.body.classList.add('govuk-exit-this-page-hide-content');\n      this.$overlay = document.createElement('div');\n      this.$overlay.className = 'govuk-exit-this-page-overlay';\n      this.$overlay.setAttribute('role', 'alert');\n      document.body.appendChild(this.$overlay);\n      this.$overlay.textContent = this.i18n.t('activated');\n      window.location.href = this.$button.href;\n    }\n    handleClick(event) {\n      event.preventDefault();\n      this.exitPage();\n    }\n    handleKeypress(event) {\n      if (!this.$updateSpan) {\n        return;\n      }\n      if (event.key === 'Shift' && !this.lastKeyWasModified) {\n        this.keypressCounter += 1;\n        this.updateIndicator();\n        if (this.timeoutMessageId) {\n          window.clearTimeout(this.timeoutMessageId);\n          this.timeoutMessageId = null;\n        }\n        if (this.keypressCounter >= 3) {\n          this.keypressCounter = 0;\n          if (this.keypressTimeoutId) {\n            window.clearTimeout(this.keypressTimeoutId);\n            this.keypressTimeoutId = null;\n          }\n          this.exitPage();\n        } else {\n          if (this.keypressCounter === 1) {\n            this.$updateSpan.textContent = this.i18n.t('pressTwoMoreTimes');\n          } else {\n            this.$updateSpan.textContent = this.i18n.t('pressOneMoreTime');\n          }\n        }\n        this.setKeypressTimer();\n      } else if (this.keypressTimeoutId) {\n        this.resetKeypressTimer();\n      }\n      this.lastKeyWasModified = event.shiftKey;\n    }\n    setKeypressTimer() {\n      if (this.keypressTimeoutId) {\n        window.clearTimeout(this.keypressTimeoutId);\n      }\n      this.keypressTimeoutId = window.setTimeout(this.resetKeypressTimer.bind(this), this.timeoutTime);\n    }\n    resetKeypressTimer() {\n      if (!this.$updateSpan) {\n        return;\n      }\n      if (this.keypressTimeoutId) {\n        window.clearTimeout(this.keypressTimeoutId);\n        this.keypressTimeoutId = null;\n      }\n      const $updateSpan = this.$updateSpan;\n      this.keypressCounter = 0;\n      $updateSpan.textContent = this.i18n.t('timedOut');\n      this.timeoutMessageId = window.setTimeout(() => {\n        $updateSpan.textContent = '';\n      }, this.timeoutTime);\n      this.updateIndicator();\n    }\n    resetPage() {\n      document.body.classList.remove('govuk-exit-this-page-hide-content');\n      if (this.$overlay) {\n        this.$overlay.remove();\n        this.$overlay = null;\n      }\n      if (this.$updateSpan) {\n        this.$updateSpan.setAttribute('role', 'status');\n        this.$updateSpan.textContent = '';\n      }\n      this.updateIndicator();\n      if (this.keypressTimeoutId) {\n        window.clearTimeout(this.keypressTimeoutId);\n      }\n      if (this.timeoutMessageId) {\n        window.clearTimeout(this.timeoutMessageId);\n      }\n    }\n  }\n\n  /**\n   * Exit this Page config\n   *\n   * @see {@link ExitThisPage.defaults}\n   * @typedef {object} ExitThisPageConfig\n   * @property {ExitThisPageTranslations} [i18n=ExitThisPage.defaults.i18n] - Exit this page translations\n   */\n\n  /**\n   * Exit this Page translations\n   *\n   * @see {@link ExitThisPage.defaults.i18n}\n   * @typedef {object} ExitThisPageTranslations\n   *\n   * Messages used by the component programatically inserted text, including\n   * overlay text and screen reader announcements.\n   * @property {string} [activated] - Screen reader announcement for when EtP\n   *   keypress functionality has been successfully activated.\n   * @property {string} [timedOut] - Screen reader announcement for when the EtP\n   *   keypress functionality has timed out.\n   * @property {string} [pressTwoMoreTimes] - Screen reader announcement informing\n   *   the user they must press the activation key two more times.\n   * @property {string} [pressOneMoreTime] - Screen reader announcement informing\n   *   the user they must press the activation key one more time.\n   */\n\n  /**\n   * @import { Schema } from '../../common/configuration.mjs'\n   */\n  ExitThisPage.moduleName = 'govuk-exit-this-page';\n  ExitThisPage.defaults = Object.freeze({\n    i18n: {\n      activated: 'Loading.',\n      timedOut: 'Exit this page expired.',\n      pressTwoMoreTimes: 'Shift, press 2 more times to exit.',\n      pressOneMoreTime: 'Shift, press 1 more time to exit.'\n    }\n  });\n  ExitThisPage.schema = Object.freeze({\n    properties: {\n      i18n: {\n        type: 'object'\n      }\n    }\n  });\n\n  /**\n   * File upload component\n   *\n   * @preserve\n   * @augments ConfigurableComponent<FileUploadConfig>\n   */\n  class FileUpload extends ConfigurableComponent {\n    /**\n     * @param {Element | null} $root - File input element\n     * @param {FileUploadConfig} [config] - File Upload config\n     */\n    constructor($root, config = {}) {\n      super($root, config);\n      this.$input = void 0;\n      this.$button = void 0;\n      this.$status = void 0;\n      this.i18n = void 0;\n      this.id = void 0;\n      this.$announcements = void 0;\n      this.enteredAnotherElement = void 0;\n      const $input = this.$root.querySelector('input');\n      if ($input === null) {\n        throw new ElementError({\n          component: FileUpload,\n          identifier: 'File inputs (`<input type=\"file\">`)'\n        });\n      }\n      if ($input.type !== 'file') {\n        throw new ElementError(formatErrorMessage(FileUpload, 'File input (`<input type=\"file\">`) attribute (`type`) is not `file`'));\n      }\n      this.$input = $input;\n      if (!this.$input.id) {\n        throw new ElementError({\n          component: FileUpload,\n          identifier: 'File input (`<input type=\"file\">`) attribute (`id`)'\n        });\n      }\n      this.id = this.$input.id;\n      this.i18n = new I18n(this.config.i18n, {\n        locale: closestAttributeValue(this.$root, 'lang')\n      });\n      const $label = this.findLabel();\n      if (!$label.id) {\n        $label.id = `${this.id}-label`;\n      }\n      this.$input.id = `${this.id}-input`;\n      this.$input.setAttribute('hidden', 'true');\n      const $button = document.createElement('button');\n      $button.classList.add('govuk-file-upload-button');\n      $button.type = 'button';\n      $button.id = this.id;\n      $button.classList.add('govuk-file-upload-button--empty');\n      const ariaDescribedBy = this.$input.getAttribute('aria-describedby');\n      if (ariaDescribedBy) {\n        $button.setAttribute('aria-describedby', ariaDescribedBy);\n      }\n      const $status = document.createElement('span');\n      $status.className = 'govuk-body govuk-file-upload-button__status';\n      $status.setAttribute('aria-live', 'polite');\n      $status.innerText = this.i18n.t('noFileChosen');\n      $button.appendChild($status);\n      const commaSpan = document.createElement('span');\n      commaSpan.className = 'govuk-visually-hidden';\n      commaSpan.innerText = ', ';\n      commaSpan.id = `${this.id}-comma`;\n      $button.appendChild(commaSpan);\n      const containerSpan = document.createElement('span');\n      containerSpan.className = 'govuk-file-upload-button__pseudo-button-container';\n      const buttonSpan = document.createElement('span');\n      buttonSpan.className = 'govuk-button govuk-button--secondary govuk-file-upload-button__pseudo-button';\n      buttonSpan.innerText = this.i18n.t('chooseFilesButton');\n      containerSpan.appendChild(buttonSpan);\n      containerSpan.insertAdjacentText('beforeend', ' ');\n      const instructionSpan = document.createElement('span');\n      instructionSpan.className = 'govuk-body govuk-file-upload-button__instruction';\n      instructionSpan.innerText = this.i18n.t('dropInstruction');\n      containerSpan.appendChild(instructionSpan);\n      $button.appendChild(containerSpan);\n      $button.setAttribute('aria-labelledby', `${$label.id} ${commaSpan.id} ${$button.id}`);\n      $button.addEventListener('click', this.onClick.bind(this));\n      $button.addEventListener('dragover', event => {\n        event.preventDefault();\n      });\n      this.$root.insertAdjacentElement('afterbegin', $button);\n      this.$input.setAttribute('tabindex', '-1');\n      this.$input.setAttribute('aria-hidden', 'true');\n      this.$button = $button;\n      this.$status = $status;\n      this.$input.addEventListener('change', this.onChange.bind(this));\n      this.updateDisabledState();\n      this.observeDisabledState();\n      this.$announcements = document.createElement('span');\n      this.$announcements.classList.add('govuk-file-upload-announcements');\n      this.$announcements.classList.add('govuk-visually-hidden');\n      this.$announcements.setAttribute('aria-live', 'assertive');\n      this.$root.insertAdjacentElement('afterend', this.$announcements);\n      this.$button.addEventListener('drop', this.onDrop.bind(this));\n      document.addEventListener('dragenter', this.updateDropzoneVisibility.bind(this));\n      document.addEventListener('dragenter', () => {\n        this.enteredAnotherElement = true;\n      });\n      document.addEventListener('dragleave', () => {\n        if (!this.enteredAnotherElement && !this.$button.disabled) {\n          this.hideDraggingState();\n          this.$announcements.innerText = this.i18n.t('leftDropZone');\n        }\n        this.enteredAnotherElement = false;\n      });\n    }\n    updateDropzoneVisibility(event) {\n      if (this.$button.disabled) return;\n      if (event.target instanceof Node) {\n        if (this.$root.contains(event.target)) {\n          if (event.dataTransfer && isContainingFiles(event.dataTransfer)) {\n            if (!this.$button.classList.contains('govuk-file-upload-button--dragging')) {\n              this.showDraggingState();\n              this.$announcements.innerText = this.i18n.t('enteredDropZone');\n            }\n          }\n        } else {\n          if (this.$button.classList.contains('govuk-file-upload-button--dragging')) {\n            this.hideDraggingState();\n            this.$announcements.innerText = this.i18n.t('leftDropZone');\n          }\n        }\n      }\n    }\n    showDraggingState() {\n      this.$button.classList.add('govuk-file-upload-button--dragging');\n    }\n    hideDraggingState() {\n      this.$button.classList.remove('govuk-file-upload-button--dragging');\n    }\n    onDrop(event) {\n      event.preventDefault();\n      if (event.dataTransfer && isContainingFiles(event.dataTransfer)) {\n        this.$input.files = event.dataTransfer.files;\n        this.$input.dispatchEvent(new CustomEvent('change'));\n        this.hideDraggingState();\n      }\n    }\n    onChange() {\n      const fileCount = this.$input.files.length;\n      if (fileCount === 0) {\n        this.$status.innerText = this.i18n.t('noFileChosen');\n        this.$button.classList.add('govuk-file-upload-button--empty');\n      } else {\n        if (fileCount === 1) {\n          this.$status.innerText = this.$input.files[0].name;\n        } else {\n          this.$status.innerText = this.i18n.t('multipleFilesChosen', {\n            count: fileCount\n          });\n        }\n        this.$button.classList.remove('govuk-file-upload-button--empty');\n      }\n    }\n    findLabel() {\n      const $label = document.querySelector(`label[for=\"${this.$input.id}\"]`);\n      if (!$label) {\n        throw new ElementError({\n          component: FileUpload,\n          identifier: `Field label (\\`<label for=${this.$input.id}>\\`)`\n        });\n      }\n      return $label;\n    }\n    onClick() {\n      this.$input.click();\n    }\n    observeDisabledState() {\n      const observer = new MutationObserver(mutationList => {\n        for (const mutation of mutationList) {\n          if (mutation.type === 'attributes' && mutation.attributeName === 'disabled') {\n            this.updateDisabledState();\n          }\n        }\n      });\n      observer.observe(this.$input, {\n        attributes: true\n      });\n    }\n    updateDisabledState() {\n      this.$button.disabled = this.$input.disabled;\n      this.$root.classList.toggle('govuk-drop-zone--disabled', this.$button.disabled);\n    }\n  }\n  FileUpload.moduleName = 'govuk-file-upload';\n  FileUpload.defaults = Object.freeze({\n    i18n: {\n      chooseFilesButton: 'Choose file',\n      dropInstruction: 'or drop file',\n      noFileChosen: 'No file chosen',\n      multipleFilesChosen: {\n        one: '%{count} file chosen',\n        other: '%{count} files chosen'\n      },\n      enteredDropZone: 'Entered drop zone',\n      leftDropZone: 'Left drop zone'\n    }\n  });\n  FileUpload.schema = Object.freeze({\n    properties: {\n      i18n: {\n        type: 'object'\n      }\n    }\n  });\n  function isContainingFiles(dataTransfer) {\n    const hasNoTypesInfo = dataTransfer.types.length === 0;\n    const isDraggingFiles = dataTransfer.types.some(type => type === 'Files');\n    return hasNoTypesInfo || isDraggingFiles;\n  }\n\n  /**\n   * @typedef {HTMLInputElement & {files: FileList}} HTMLFileInputElement\n   */\n\n  /**\n   * File upload config\n   *\n   * @see {@link FileUpload.defaults}\n   * @typedef {object} FileUploadConfig\n   * @property {FileUploadTranslations} [i18n=FileUpload.defaults.i18n] - File upload translations\n   */\n\n  /**\n   * File upload translations\n   *\n   * @see {@link FileUpload.defaults.i18n}\n   * @typedef {object} FileUploadTranslations\n   *\n   * Messages used by the component\n   * @property {string} [chooseFile] - The text of the button that opens the file picker\n   * @property {string} [dropInstruction] - The text informing users they can drop files\n   * @property {TranslationPluralForms} [multipleFilesChosen] - The text displayed when multiple files\n   *   have been chosen by the user\n   * @property {string} [noFileChosen] - The text to displayed when no file has been chosen by the user\n   * @property {string} [enteredDropZone] - The text announced by assistive technology\n   *   when user drags files and enters the drop zone\n   * @property {string} [leftDropZone] - The text announced by assistive technology\n   *   when user drags files and leaves the drop zone without dropping\n   */\n\n  /**\n   * @import { Schema } from '../../common/configuration.mjs'\n   * @import { TranslationPluralForms } from '../../i18n.mjs'\n   */\n\n  /**\n   * Header component\n   *\n   * @preserve\n   */\n  class Header extends Component {\n    /**\n     * Apply a matchMedia for desktop which will trigger a state sync if the\n     * browser viewport moves between states.\n     *\n     * @param {Element | null} $root - HTML element to use for header\n     */\n    constructor($root) {\n      super($root);\n      this.$menuButton = void 0;\n      this.$menu = void 0;\n      this.menuIsOpen = false;\n      this.mql = null;\n      const $menuButton = this.$root.querySelector('.govuk-js-header-toggle');\n      if (!$menuButton) {\n        return this;\n      }\n      this.$root.classList.add('govuk-header--with-js-navigation');\n      const menuId = $menuButton.getAttribute('aria-controls');\n      if (!menuId) {\n        throw new ElementError({\n          component: Header,\n          identifier: 'Navigation button (`<button class=\"govuk-js-header-toggle\">`) attribute (`aria-controls`)'\n        });\n      }\n      const $menu = document.getElementById(menuId);\n      if (!$menu) {\n        throw new ElementError({\n          component: Header,\n          element: $menu,\n          identifier: `Navigation (\\`<ul id=\"${menuId}\">\\`)`\n        });\n      }\n      this.$menu = $menu;\n      this.$menuButton = $menuButton;\n      this.setupResponsiveChecks();\n      this.$menuButton.addEventListener('click', () => this.handleMenuButtonClick());\n    }\n    setupResponsiveChecks() {\n      const breakpoint = getBreakpoint('desktop');\n      if (!breakpoint.value) {\n        throw new ElementError({\n          component: Header,\n          identifier: `CSS custom property (\\`${breakpoint.property}\\`) on pseudo-class \\`:root\\``\n        });\n      }\n      this.mql = window.matchMedia(`(min-width: ${breakpoint.value})`);\n      if ('addEventListener' in this.mql) {\n        this.mql.addEventListener('change', () => this.checkMode());\n      } else {\n        this.mql.addListener(() => this.checkMode());\n      }\n      this.checkMode();\n    }\n    checkMode() {\n      if (!this.mql || !this.$menu || !this.$menuButton) {\n        return;\n      }\n      if (this.mql.matches) {\n        this.$menu.removeAttribute('hidden');\n        this.$menuButton.setAttribute('hidden', '');\n      } else {\n        this.$menuButton.removeAttribute('hidden');\n        this.$menuButton.setAttribute('aria-expanded', this.menuIsOpen.toString());\n        if (this.menuIsOpen) {\n          this.$menu.removeAttribute('hidden');\n        } else {\n          this.$menu.setAttribute('hidden', '');\n        }\n      }\n    }\n    handleMenuButtonClick() {\n      this.menuIsOpen = !this.menuIsOpen;\n      this.checkMode();\n    }\n  }\n  Header.moduleName = 'govuk-header';\n\n  /**\n   * Notification Banner component\n   *\n   * @preserve\n   * @augments ConfigurableComponent<NotificationBannerConfig>\n   */\n  class NotificationBanner extends ConfigurableComponent {\n    /**\n     * @param {Element | null} $root - HTML element to use for notification banner\n     * @param {NotificationBannerConfig} [config] - Notification banner config\n     */\n    constructor($root, config = {}) {\n      super($root, config);\n      if (this.$root.getAttribute('role') === 'alert' && !this.config.disableAutoFocus) {\n        setFocus(this.$root);\n      }\n    }\n  }\n\n  /**\n   * Notification banner config\n   *\n   * @typedef {object} NotificationBannerConfig\n   * @property {boolean} [disableAutoFocus=false] - If set to `true` the\n   *   notification banner will not be focussed when the page loads. This only\n   *   applies if the component has a `role` of `alert` – in other cases the\n   *   component will not be focused on page load, regardless of this option.\n   */\n\n  /**\n   * @import { Schema } from '../../common/configuration.mjs'\n   */\n  NotificationBanner.moduleName = 'govuk-notification-banner';\n  NotificationBanner.defaults = Object.freeze({\n    disableAutoFocus: false\n  });\n  NotificationBanner.schema = Object.freeze({\n    properties: {\n      disableAutoFocus: {\n        type: 'boolean'\n      }\n    }\n  });\n\n  /**\n   * Password input component\n   *\n   * @preserve\n   * @augments ConfigurableComponent<PasswordInputConfig>\n   */\n  class PasswordInput extends ConfigurableComponent {\n    /**\n     * @param {Element | null} $root - HTML element to use for password input\n     * @param {PasswordInputConfig} [config] - Password input config\n     */\n    constructor($root, config = {}) {\n      super($root, config);\n      this.i18n = void 0;\n      this.$input = void 0;\n      this.$showHideButton = void 0;\n      this.$screenReaderStatusMessage = void 0;\n      const $input = this.$root.querySelector('.govuk-js-password-input-input');\n      if (!($input instanceof HTMLInputElement)) {\n        throw new ElementError({\n          component: PasswordInput,\n          element: $input,\n          expectedType: 'HTMLInputElement',\n          identifier: 'Form field (`.govuk-js-password-input-input`)'\n        });\n      }\n      if ($input.type !== 'password') {\n        throw new ElementError('Password input: Form field (`.govuk-js-password-input-input`) must be of type `password`.');\n      }\n      const $showHideButton = this.$root.querySelector('.govuk-js-password-input-toggle');\n      if (!($showHideButton instanceof HTMLButtonElement)) {\n        throw new ElementError({\n          component: PasswordInput,\n          element: $showHideButton,\n          expectedType: 'HTMLButtonElement',\n          identifier: 'Button (`.govuk-js-password-input-toggle`)'\n        });\n      }\n      if ($showHideButton.type !== 'button') {\n        throw new ElementError('Password input: Button (`.govuk-js-password-input-toggle`) must be of type `button`.');\n      }\n      this.$input = $input;\n      this.$showHideButton = $showHideButton;\n      this.i18n = new I18n(this.config.i18n, {\n        locale: closestAttributeValue(this.$root, 'lang')\n      });\n      this.$showHideButton.removeAttribute('hidden');\n      const $screenReaderStatusMessage = document.createElement('div');\n      $screenReaderStatusMessage.className = 'govuk-password-input__sr-status govuk-visually-hidden';\n      $screenReaderStatusMessage.setAttribute('aria-live', 'polite');\n      this.$screenReaderStatusMessage = $screenReaderStatusMessage;\n      this.$input.insertAdjacentElement('afterend', $screenReaderStatusMessage);\n      this.$showHideButton.addEventListener('click', this.toggle.bind(this));\n      if (this.$input.form) {\n        this.$input.form.addEventListener('submit', () => this.hide());\n      }\n      window.addEventListener('pageshow', event => {\n        if (event.persisted && this.$input.type !== 'password') {\n          this.hide();\n        }\n      });\n      this.hide();\n    }\n    toggle(event) {\n      event.preventDefault();\n      if (this.$input.type === 'password') {\n        this.show();\n        return;\n      }\n      this.hide();\n    }\n    show() {\n      this.setType('text');\n    }\n    hide() {\n      this.setType('password');\n    }\n    setType(type) {\n      if (type === this.$input.type) {\n        return;\n      }\n      this.$input.setAttribute('type', type);\n      const isHidden = type === 'password';\n      const prefixButton = isHidden ? 'show' : 'hide';\n      const prefixStatus = isHidden ? 'passwordHidden' : 'passwordShown';\n      this.$showHideButton.innerText = this.i18n.t(`${prefixButton}Password`);\n      this.$showHideButton.setAttribute('aria-label', this.i18n.t(`${prefixButton}PasswordAriaLabel`));\n      this.$screenReaderStatusMessage.innerText = this.i18n.t(`${prefixStatus}Announcement`);\n    }\n  }\n\n  /**\n   * Password input config\n   *\n   * @typedef {object} PasswordInputConfig\n   * @property {PasswordInputTranslations} [i18n=PasswordInput.defaults.i18n] - Password input translations\n   */\n\n  /**\n   * Password input translations\n   *\n   * @see {@link PasswordInput.defaults.i18n}\n   * @typedef {object} PasswordInputTranslations\n   *\n   * Messages displayed to the user indicating the state of the show/hide toggle.\n   * @property {string} [showPassword] - Visible text of the button when the\n   *   password is currently hidden. Plain text only.\n   * @property {string} [hidePassword] - Visible text of the button when the\n   *   password is currently visible. Plain text only.\n   * @property {string} [showPasswordAriaLabel] - aria-label of the button when\n   *   the password is currently hidden. Plain text only.\n   * @property {string} [hidePasswordAriaLabel] - aria-label of the button when\n   *   the password is currently visible. Plain text only.\n   * @property {string} [passwordShownAnnouncement] - Screen reader\n   *   announcement to make when the password has just become visible.\n   *   Plain text only.\n   * @property {string} [passwordHiddenAnnouncement] - Screen reader\n   *   announcement to make when the password has just been hidden.\n   *   Plain text only.\n   */\n\n  /**\n   * @import { Schema } from '../../common/configuration.mjs'\n   */\n  PasswordInput.moduleName = 'govuk-password-input';\n  PasswordInput.defaults = Object.freeze({\n    i18n: {\n      showPassword: 'Show',\n      hidePassword: 'Hide',\n      showPasswordAriaLabel: 'Show password',\n      hidePasswordAriaLabel: 'Hide password',\n      passwordShownAnnouncement: 'Your password is visible',\n      passwordHiddenAnnouncement: 'Your password is hidden'\n    }\n  });\n  PasswordInput.schema = Object.freeze({\n    properties: {\n      i18n: {\n        type: 'object'\n      }\n    }\n  });\n\n  /**\n   * Radios component\n   *\n   * @preserve\n   */\n  class Radios extends Component {\n    /**\n     * Radios can be associated with a 'conditionally revealed' content block –\n     * for example, a radio for 'Phone' could reveal an additional form field for\n     * the user to enter their phone number.\n     *\n     * These associations are made using a `data-aria-controls` attribute, which\n     * is promoted to an aria-controls attribute during initialisation.\n     *\n     * We also need to restore the state of any conditional reveals on the page\n     * (for example if the user has navigated back), and set up event handlers to\n     * keep the reveal in sync with the radio state.\n     *\n     * @param {Element | null} $root - HTML element to use for radios\n     */\n    constructor($root) {\n      super($root);\n      this.$inputs = void 0;\n      const $inputs = this.$root.querySelectorAll('input[type=\"radio\"]');\n      if (!$inputs.length) {\n        throw new ElementError({\n          component: Radios,\n          identifier: 'Form inputs (`<input type=\"radio\">`)'\n        });\n      }\n      this.$inputs = $inputs;\n      this.$inputs.forEach($input => {\n        const targetId = $input.getAttribute('data-aria-controls');\n        if (!targetId) {\n          return;\n        }\n        if (!document.getElementById(targetId)) {\n          throw new ElementError({\n            component: Radios,\n            identifier: `Conditional reveal (\\`id=\"${targetId}\"\\`)`\n          });\n        }\n        $input.setAttribute('aria-controls', targetId);\n        $input.removeAttribute('data-aria-controls');\n      });\n      window.addEventListener('pageshow', () => this.syncAllConditionalReveals());\n      this.syncAllConditionalReveals();\n      this.$root.addEventListener('click', event => this.handleClick(event));\n    }\n    syncAllConditionalReveals() {\n      this.$inputs.forEach($input => this.syncConditionalRevealWithInputState($input));\n    }\n    syncConditionalRevealWithInputState($input) {\n      const targetId = $input.getAttribute('aria-controls');\n      if (!targetId) {\n        return;\n      }\n      const $target = document.getElementById(targetId);\n      if ($target != null && $target.classList.contains('govuk-radios__conditional')) {\n        const inputIsChecked = $input.checked;\n        $input.setAttribute('aria-expanded', inputIsChecked.toString());\n        $target.classList.toggle('govuk-radios__conditional--hidden', !inputIsChecked);\n      }\n    }\n    handleClick(event) {\n      const $clickedInput = event.target;\n      if (!($clickedInput instanceof HTMLInputElement) || $clickedInput.type !== 'radio') {\n        return;\n      }\n      const $allInputs = document.querySelectorAll('input[type=\"radio\"][aria-controls]');\n      const $clickedInputForm = $clickedInput.form;\n      const $clickedInputName = $clickedInput.name;\n      $allInputs.forEach($input => {\n        const hasSameFormOwner = $input.form === $clickedInputForm;\n        const hasSameName = $input.name === $clickedInputName;\n        if (hasSameName && hasSameFormOwner) {\n          this.syncConditionalRevealWithInputState($input);\n        }\n      });\n    }\n  }\n  Radios.moduleName = 'govuk-radios';\n\n  /**\n   * Service Navigation component\n   *\n   * @preserve\n   */\n  class ServiceNavigation extends Component {\n    /**\n     * @param {Element | null} $root - HTML element to use for header\n     */\n    constructor($root) {\n      super($root);\n      this.$menuButton = void 0;\n      this.$menu = void 0;\n      this.menuIsOpen = false;\n      this.mql = null;\n      const $menuButton = this.$root.querySelector('.govuk-js-service-navigation-toggle');\n      if (!$menuButton) {\n        return this;\n      }\n      const menuId = $menuButton.getAttribute('aria-controls');\n      if (!menuId) {\n        throw new ElementError({\n          component: ServiceNavigation,\n          identifier: 'Navigation button (`<button class=\"govuk-js-service-navigation-toggle\">`) attribute (`aria-controls`)'\n        });\n      }\n      const $menu = document.getElementById(menuId);\n      if (!$menu) {\n        throw new ElementError({\n          component: ServiceNavigation,\n          element: $menu,\n          identifier: `Navigation (\\`<ul id=\"${menuId}\">\\`)`\n        });\n      }\n      this.$menu = $menu;\n      this.$menuButton = $menuButton;\n      this.setupResponsiveChecks();\n      this.$menuButton.addEventListener('click', () => this.handleMenuButtonClick());\n    }\n    setupResponsiveChecks() {\n      const breakpoint = getBreakpoint('tablet');\n      if (!breakpoint.value) {\n        throw new ElementError({\n          component: ServiceNavigation,\n          identifier: `CSS custom property (\\`${breakpoint.property}\\`) on pseudo-class \\`:root\\``\n        });\n      }\n      this.mql = window.matchMedia(`(min-width: ${breakpoint.value})`);\n      if ('addEventListener' in this.mql) {\n        this.mql.addEventListener('change', () => this.checkMode());\n      } else {\n        this.mql.addListener(() => this.checkMode());\n      }\n      this.checkMode();\n    }\n    checkMode() {\n      if (!this.mql || !this.$menu || !this.$menuButton) {\n        return;\n      }\n      if (this.mql.matches) {\n        this.$menu.removeAttribute('hidden');\n        this.$menuButton.setAttribute('hidden', '');\n      } else {\n        this.$menuButton.removeAttribute('hidden');\n        this.$menuButton.setAttribute('aria-expanded', this.menuIsOpen.toString());\n        if (this.menuIsOpen) {\n          this.$menu.removeAttribute('hidden');\n        } else {\n          this.$menu.setAttribute('hidden', '');\n        }\n      }\n    }\n    handleMenuButtonClick() {\n      this.menuIsOpen = !this.menuIsOpen;\n      this.checkMode();\n    }\n  }\n  ServiceNavigation.moduleName = 'govuk-service-navigation';\n\n  /**\n   * Skip link component\n   *\n   * @preserve\n   * @augments Component<HTMLAnchorElement>\n   */\n  class SkipLink extends Component {\n    /**\n     * @param {Element | null} $root - HTML element to use for skip link\n     * @throws {ElementError} when $root is not set or the wrong type\n     * @throws {ElementError} when $root.hash does not contain a hash\n     * @throws {ElementError} when the linked element is missing or the wrong type\n     */\n    constructor($root) {\n      var _this$$root$getAttrib;\n      super($root);\n      const hash = this.$root.hash;\n      const href = (_this$$root$getAttrib = this.$root.getAttribute('href')) != null ? _this$$root$getAttrib : '';\n      if (this.$root.origin !== window.location.origin || this.$root.pathname !== window.location.pathname) {\n        return;\n      }\n      const linkedElementId = hash.replace('#', '');\n      if (!linkedElementId) {\n        throw new ElementError(`Skip link: Target link (\\`href=\"${href}\"\\`) has no hash fragment`);\n      }\n      const $linkedElement = document.getElementById(linkedElementId);\n      if (!$linkedElement) {\n        throw new ElementError({\n          component: SkipLink,\n          element: $linkedElement,\n          identifier: `Target content (\\`id=\"${linkedElementId}\"\\`)`\n        });\n      }\n      this.$root.addEventListener('click', () => setFocus($linkedElement, {\n        onBeforeFocus() {\n          $linkedElement.classList.add('govuk-skip-link-focused-element');\n        },\n        onBlur() {\n          $linkedElement.classList.remove('govuk-skip-link-focused-element');\n        }\n      }));\n    }\n  }\n  SkipLink.elementType = HTMLAnchorElement;\n  SkipLink.moduleName = 'govuk-skip-link';\n\n  /**\n   * Tabs component\n   *\n   * @preserve\n   */\n  class Tabs extends Component {\n    /**\n     * @param {Element | null} $root - HTML element to use for tabs\n     */\n    constructor($root) {\n      super($root);\n      this.$tabs = void 0;\n      this.$tabList = void 0;\n      this.$tabListItems = void 0;\n      this.jsHiddenClass = 'govuk-tabs__panel--hidden';\n      this.changingHash = false;\n      this.boundTabClick = void 0;\n      this.boundTabKeydown = void 0;\n      this.boundOnHashChange = void 0;\n      this.mql = null;\n      const $tabs = this.$root.querySelectorAll('a.govuk-tabs__tab');\n      if (!$tabs.length) {\n        throw new ElementError({\n          component: Tabs,\n          identifier: 'Links (`<a class=\"govuk-tabs__tab\">`)'\n        });\n      }\n      this.$tabs = $tabs;\n      this.boundTabClick = this.onTabClick.bind(this);\n      this.boundTabKeydown = this.onTabKeydown.bind(this);\n      this.boundOnHashChange = this.onHashChange.bind(this);\n      const $tabList = this.$root.querySelector('.govuk-tabs__list');\n      const $tabListItems = this.$root.querySelectorAll('li.govuk-tabs__list-item');\n      if (!$tabList) {\n        throw new ElementError({\n          component: Tabs,\n          identifier: 'List (`<ul class=\"govuk-tabs__list\">`)'\n        });\n      }\n      if (!$tabListItems.length) {\n        throw new ElementError({\n          component: Tabs,\n          identifier: 'List items (`<li class=\"govuk-tabs__list-item\">`)'\n        });\n      }\n      this.$tabList = $tabList;\n      this.$tabListItems = $tabListItems;\n      this.setupResponsiveChecks();\n    }\n    setupResponsiveChecks() {\n      const breakpoint = getBreakpoint('tablet');\n      if (!breakpoint.value) {\n        throw new ElementError({\n          component: Tabs,\n          identifier: `CSS custom property (\\`${breakpoint.property}\\`) on pseudo-class \\`:root\\``\n        });\n      }\n      this.mql = window.matchMedia(`(min-width: ${breakpoint.value})`);\n      if ('addEventListener' in this.mql) {\n        this.mql.addEventListener('change', () => this.checkMode());\n      } else {\n        this.mql.addListener(() => this.checkMode());\n      }\n      this.checkMode();\n    }\n    checkMode() {\n      var _this$mql;\n      if ((_this$mql = this.mql) != null && _this$mql.matches) {\n        this.setup();\n      } else {\n        this.teardown();\n      }\n    }\n    setup() {\n      var _this$getTab;\n      this.$tabList.setAttribute('role', 'tablist');\n      this.$tabListItems.forEach($item => {\n        $item.setAttribute('role', 'presentation');\n      });\n      this.$tabs.forEach($tab => {\n        this.setAttributes($tab);\n        $tab.addEventListener('click', this.boundTabClick, true);\n        $tab.addEventListener('keydown', this.boundTabKeydown, true);\n        this.hideTab($tab);\n      });\n      const $activeTab = (_this$getTab = this.getTab(window.location.hash)) != null ? _this$getTab : this.$tabs[0];\n      this.showTab($activeTab);\n      window.addEventListener('hashchange', this.boundOnHashChange, true);\n    }\n    teardown() {\n      this.$tabList.removeAttribute('role');\n      this.$tabListItems.forEach($item => {\n        $item.removeAttribute('role');\n      });\n      this.$tabs.forEach($tab => {\n        $tab.removeEventListener('click', this.boundTabClick, true);\n        $tab.removeEventListener('keydown', this.boundTabKeydown, true);\n        this.unsetAttributes($tab);\n      });\n      window.removeEventListener('hashchange', this.boundOnHashChange, true);\n    }\n    onHashChange() {\n      const hash = window.location.hash;\n      const $tabWithHash = this.getTab(hash);\n      if (!$tabWithHash) {\n        return;\n      }\n      if (this.changingHash) {\n        this.changingHash = false;\n        return;\n      }\n      const $previousTab = this.getCurrentTab();\n      if (!$previousTab) {\n        return;\n      }\n      this.hideTab($previousTab);\n      this.showTab($tabWithHash);\n      $tabWithHash.focus();\n    }\n    hideTab($tab) {\n      this.unhighlightTab($tab);\n      this.hidePanel($tab);\n    }\n    showTab($tab) {\n      this.highlightTab($tab);\n      this.showPanel($tab);\n    }\n    getTab(hash) {\n      return this.$root.querySelector(`a.govuk-tabs__tab[href=\"${hash}\"]`);\n    }\n    setAttributes($tab) {\n      const panelId = $tab.hash.replace('#', '');\n      if (!panelId) {\n        return;\n      }\n      $tab.setAttribute('id', `tab_${panelId}`);\n      $tab.setAttribute('role', 'tab');\n      $tab.setAttribute('aria-controls', panelId);\n      $tab.setAttribute('aria-selected', 'false');\n      $tab.setAttribute('tabindex', '-1');\n      const $panel = this.getPanel($tab);\n      if (!$panel) {\n        return;\n      }\n      $panel.setAttribute('role', 'tabpanel');\n      $panel.setAttribute('aria-labelledby', $tab.id);\n      $panel.classList.add(this.jsHiddenClass);\n    }\n    unsetAttributes($tab) {\n      $tab.removeAttribute('id');\n      $tab.removeAttribute('role');\n      $tab.removeAttribute('aria-controls');\n      $tab.removeAttribute('aria-selected');\n      $tab.removeAttribute('tabindex');\n      const $panel = this.getPanel($tab);\n      if (!$panel) {\n        return;\n      }\n      $panel.removeAttribute('role');\n      $panel.removeAttribute('aria-labelledby');\n      $panel.classList.remove(this.jsHiddenClass);\n    }\n    onTabClick(event) {\n      const $currentTab = this.getCurrentTab();\n      const $nextTab = event.currentTarget;\n      if (!$currentTab || !($nextTab instanceof HTMLAnchorElement)) {\n        return;\n      }\n      event.preventDefault();\n      this.hideTab($currentTab);\n      this.showTab($nextTab);\n      this.createHistoryEntry($nextTab);\n    }\n    createHistoryEntry($tab) {\n      const $panel = this.getPanel($tab);\n      if (!$panel) {\n        return;\n      }\n      const panelId = $panel.id;\n      $panel.id = '';\n      this.changingHash = true;\n      window.location.hash = panelId;\n      $panel.id = panelId;\n    }\n    onTabKeydown(event) {\n      switch (event.key) {\n        case 'ArrowLeft':\n        case 'Left':\n          this.activatePreviousTab();\n          event.preventDefault();\n          break;\n        case 'ArrowRight':\n        case 'Right':\n          this.activateNextTab();\n          event.preventDefault();\n          break;\n      }\n    }\n    activateNextTab() {\n      const $currentTab = this.getCurrentTab();\n      if (!($currentTab != null && $currentTab.parentElement)) {\n        return;\n      }\n      const $nextTabListItem = $currentTab.parentElement.nextElementSibling;\n      if (!$nextTabListItem) {\n        return;\n      }\n      const $nextTab = $nextTabListItem.querySelector('a.govuk-tabs__tab');\n      if (!$nextTab) {\n        return;\n      }\n      this.hideTab($currentTab);\n      this.showTab($nextTab);\n      $nextTab.focus();\n      this.createHistoryEntry($nextTab);\n    }\n    activatePreviousTab() {\n      const $currentTab = this.getCurrentTab();\n      if (!($currentTab != null && $currentTab.parentElement)) {\n        return;\n      }\n      const $previousTabListItem = $currentTab.parentElement.previousElementSibling;\n      if (!$previousTabListItem) {\n        return;\n      }\n      const $previousTab = $previousTabListItem.querySelector('a.govuk-tabs__tab');\n      if (!$previousTab) {\n        return;\n      }\n      this.hideTab($currentTab);\n      this.showTab($previousTab);\n      $previousTab.focus();\n      this.createHistoryEntry($previousTab);\n    }\n    getPanel($tab) {\n      const panelId = $tab.hash.replace('#', '');\n      if (!panelId) {\n        return null;\n      }\n      return this.$root.querySelector(`#${panelId}`);\n    }\n    showPanel($tab) {\n      const $panel = this.getPanel($tab);\n      if (!$panel) {\n        return;\n      }\n      $panel.classList.remove(this.jsHiddenClass);\n    }\n    hidePanel($tab) {\n      const $panel = this.getPanel($tab);\n      if (!$panel) {\n        return;\n      }\n      $panel.classList.add(this.jsHiddenClass);\n    }\n    unhighlightTab($tab) {\n      if (!$tab.parentElement) {\n        return;\n      }\n      $tab.setAttribute('aria-selected', 'false');\n      $tab.parentElement.classList.remove('govuk-tabs__list-item--selected');\n      $tab.setAttribute('tabindex', '-1');\n    }\n    highlightTab($tab) {\n      if (!$tab.parentElement) {\n        return;\n      }\n      $tab.setAttribute('aria-selected', 'true');\n      $tab.parentElement.classList.add('govuk-tabs__list-item--selected');\n      $tab.setAttribute('tabindex', '0');\n    }\n    getCurrentTab() {\n      return this.$root.querySelector('.govuk-tabs__list-item--selected a.govuk-tabs__tab');\n    }\n  }\n  Tabs.moduleName = 'govuk-tabs';\n\n  /**\n   * Initialise all components\n   *\n   * Use the `data-module` attributes to find, instantiate and init all of the\n   * components provided as part of GOV.UK Frontend.\n   *\n   * @param {Config | Element | Document | null} [scopeOrConfig] - Scope of the document to search within or config for all components (with optional scope)\n   */\n  function initAll(scopeOrConfig = {}) {\n    const config = isObject(scopeOrConfig) ? scopeOrConfig : {};\n    const options = normaliseOptions(scopeOrConfig);\n    try {\n      if (!isSupported()) {\n        throw new SupportError();\n      }\n      if (options.scope === null) {\n        throw new ElementError({\n          element: options.scope,\n          identifier: 'GOV.UK Frontend scope element (`$scope`)'\n        });\n      }\n    } catch (error) {\n      if (options.onError) {\n        options.onError(error, {\n          config\n        });\n      } else {\n        console.log(error);\n      }\n      return;\n    }\n    const components = [[Accordion, config.accordion], [Button, config.button], [CharacterCount, config.characterCount], [Checkboxes], [ErrorSummary, config.errorSummary], [ExitThisPage, config.exitThisPage], [FileUpload, config.fileUpload], [Header], [NotificationBanner, config.notificationBanner], [PasswordInput, config.passwordInput], [Radios], [ServiceNavigation], [SkipLink], [Tabs]];\n    components.forEach(([Component, componentConfig]) => {\n      createAll(Component, componentConfig, options);\n    });\n  }\n\n  /**\n   * Create all instances of a specific component on the page\n   *\n   * Uses the `data-module` attribute to find all elements matching the specified\n   * component on the page, creating instances of the component object for each\n   * of them.\n   *\n   * Any component errors will be caught and logged to the console.\n   *\n   * @template {CompatibleClass} ComponentClass\n   * @param {ComponentClass} Component - class of the component to create\n   * @param {ComponentConfig<ComponentClass>} [config] - Config supplied to component\n   * @param {OnErrorCallback<ComponentClass> | Element | Document | null | CreateAllOptions<ComponentClass>} [scopeOrOptions] - options for createAll including scope of the document to search within and callback function if error throw by component on init\n   * @returns {Array<InstanceType<ComponentClass>>} - array of instantiated components\n   */\n  function createAll(Component, config, scopeOrOptions) {\n    let $elements;\n    const options = normaliseOptions(scopeOrOptions);\n    try {\n      var _options$scope;\n      if (!isSupported()) {\n        throw new SupportError();\n      }\n      if (options.scope === null) {\n        throw new ElementError({\n          element: options.scope,\n          component: Component,\n          identifier: 'Scope element (`$scope`)'\n        });\n      }\n      $elements = (_options$scope = options.scope) == null ? void 0 : _options$scope.querySelectorAll(`[data-module=\"${Component.moduleName}\"]`);\n    } catch (error) {\n      if (options.onError) {\n        options.onError(error, {\n          component: Component,\n          config\n        });\n      } else {\n        console.log(error);\n      }\n      return [];\n    }\n    return Array.from($elements != null ? $elements : []).map($element => {\n      try {\n        return typeof config !== 'undefined' ? new Component($element, config) : new Component($element);\n      } catch (error) {\n        if (options.onError) {\n          options.onError(error, {\n            element: $element,\n            component: Component,\n            config\n          });\n        } else {\n          console.log(error);\n        }\n        return null;\n      }\n    }).filter(Boolean);\n  }\n  /**\n   * @typedef {{new (...args: any[]): any, moduleName: string}} CompatibleClass\n   */\n  /**\n   * Config for all components via `initAll()`\n   *\n   * @typedef {object} Config\n   * @property {Element | Document | null} [scope] - Scope of the document to search within\n   * @property {OnErrorCallback<CompatibleClass>} [onError] - Initialisation error callback\n   * @property {AccordionConfig} [accordion] - Accordion config\n   * @property {ButtonConfig} [button] - Button config\n   * @property {CharacterCountConfig} [characterCount] - Character Count config\n   * @property {ErrorSummaryConfig} [errorSummary] - Error Summary config\n   * @property {ExitThisPageConfig} [exitThisPage] - Exit This Page config\n   * @property {FileUploadConfig} [fileUpload] - File Upload config\n   * @property {NotificationBannerConfig} [notificationBanner] - Notification Banner config\n   * @property {PasswordInputConfig} [passwordInput] - Password input config\n   */\n  /**\n   * Config for individual components\n   *\n   * @import { AccordionConfig } from './components/accordion/accordion.mjs'\n   * @import { ButtonConfig } from './components/button/button.mjs'\n   * @import { CharacterCountConfig } from './components/character-count/character-count.mjs'\n   * @import { ErrorSummaryConfig } from './components/error-summary/error-summary.mjs'\n   * @import { ExitThisPageConfig } from './components/exit-this-page/exit-this-page.mjs'\n   * @import { NotificationBannerConfig } from './components/notification-banner/notification-banner.mjs'\n   * @import { PasswordInputConfig } from './components/password-input/password-input.mjs'\n   * @import { FileUploadConfig } from './components/file-upload/file-upload.mjs'\n   */\n  /**\n   * Component config keys, e.g. `accordion` and `characterCount`\n   *\n   * @typedef {keyof Omit<Config, 'scope' | 'onError'>} ConfigKey\n   */\n  /**\n   * @template {CompatibleClass} ComponentClass\n   * @typedef {ConstructorParameters<ComponentClass>[1]} ComponentConfig\n   */\n  /**\n   * @template {CompatibleClass} ComponentClass\n   * @typedef {object} ErrorContext\n   * @property {Element} [element] - Element used for component module initialisation\n   * @property {ComponentClass} [component] - Class of component\n   * @property {Config | ComponentConfig<ComponentClass>} [config] - Config supplied to components\n   */\n  /**\n   * @template {CompatibleClass} ComponentClass\n   * @callback OnErrorCallback\n   * @param {unknown} error - Thrown error\n   * @param {ErrorContext<ComponentClass>} context - Object containing the element, component class and configuration\n   */\n  /**\n   * @template {CompatibleClass} ComponentClass\n   * @typedef {object} CreateAllOptions\n   * @property {Element | Document | null} [scope] - scope of the document to search within\n   * @property {OnErrorCallback<ComponentClass>} [onError] - callback function if error throw by component on init\n   */\n\n  exports.Accordion = Accordion;\n  exports.Button = Button;\n  exports.CharacterCount = CharacterCount;\n  exports.Checkboxes = Checkboxes;\n  exports.Component = Component;\n  exports.ConfigurableComponent = ConfigurableComponent;\n  exports.ErrorSummary = ErrorSummary;\n  exports.ExitThisPage = ExitThisPage;\n  exports.FileUpload = FileUpload;\n  exports.Header = Header;\n  exports.NotificationBanner = NotificationBanner;\n  exports.PasswordInput = PasswordInput;\n  exports.Radios = Radios;\n  exports.ServiceNavigation = ServiceNavigation;\n  exports.SkipLink = SkipLink;\n  exports.Tabs = Tabs;\n  exports.createAll = createAll;\n  exports.initAll = initAll;\n  exports.isSupported = isSupported;\n  exports.version = version;\n\n}));\n\n\n},{}],2:[function(require,module,exports){\nvar GOVUKFrontend = require(\"govuk-frontend\");\nGOVUKFrontend.initAll();\n\n},{\"govuk-frontend\":1}]},{},[2]);\n"],"mappings":"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"}